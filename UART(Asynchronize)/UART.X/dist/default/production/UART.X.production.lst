

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 30 22:53:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     001A                     _RCREG	set	26
   170     0019                     _TXREG	set	25
   171     0018                     _RCSTA	set	24
   172     0065                     _RCIF	set	101
   173     0064                     _TXIF	set	100
   174     0099                     _SPBRG	set	153
   175     0098                     _TXSTA	set	152
   176     043F                     _TRISC7	set	1087
   177     043E                     _TRISC6	set	1086
   178                           
   179                           	psect	strings
   180     0003                     __pstrings:
   181     0003                     stringtab:
   182     0003                     __stringtab:
   183     0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186     0003                     stringdir:
   187     0003  3000               	movlw	high stringdir
   188     0004  008A               	movwf	10
   189     0005  0804               	movf	4,w
   190     0006  0A84               	incf	4,f
   191     0007  0782               	addwf	2,f
   192     0008                     __stringbase:
   193     0008  3400               	retlw	0
   194     0009                     __end_of__stringtab:
   195     0009                     STR_1:
   196     0009  3445               	retlw	69	;'E'
   197     000A  346E               	retlw	110	;'n'
   198     000B  3474               	retlw	116	;'t'
   199     000C  3465               	retlw	101	;'e'
   200     000D  3472               	retlw	114	;'r'
   201     000E  3420               	retlw	32	;' '
   202     000F  3473               	retlw	115	;'s'
   203     0010  346F               	retlw	111	;'o'
   204     0011  346D               	retlw	109	;'m'
   205     0012  3465               	retlw	101	;'e'
   206     0013  3420               	retlw	32	;' '
   207     0014  346C               	retlw	108	;'l'
   208     0015  3465               	retlw	101	;'e'
   209     0016  3474               	retlw	116	;'t'
   210     0017  3474               	retlw	116	;'t'
   211     0018  3465               	retlw	101	;'e'
   212     0019  3472               	retlw	114	;'r'
   213     001A  3473               	retlw	115	;'s'
   214     001B  343A               	retlw	58	;':'
   215     001C  3420               	retlw	32	;' '
   216     001D  3400               	retlw	0
   217                           
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2FC0   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_UART_INIT:
   233     0070                     ??_UART_INIT:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_UART_Txstring:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_UART_Txchar:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_UART_Txchar:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_UART_Rx:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ??_UART_Rx:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     UART_Txchar@a:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259     0070                     	ds	1
   260     0071                     ??_UART_Txstring:
   261                           
   262                           ; 1 bytes @ 0x1
   263     0071                     	ds	1
   264     0072                     UART_Txstring@s:
   265                           
   266                           ; 1 bytes @ 0x2
   267     0072                     	ds	1
   268     0073                     ??_main:
   269                           
   270                           	psect	maintext
   271     07C0                     __pmaintext:	
   272                           ; 1 bytes @ 0x3
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 27 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called: 2
   298 ;; This function calls:
   299 ;;		_UART_INIT
   300 ;;		_UART_Rx
   301 ;;		_UART_Txchar
   302 ;;		_UART_Txstring
   303 ;; This function is called by:
   304 ;;		Startup code after reset
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308     07C0                     _main:	
   309                           ;psect for function _main
   310                           
   311     07C0                     l635:	
   312                           ;incstack = 0
   313                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   314                           
   315                           
   316                           ;main.c: 28:     TRISC6 = 0;
   317     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   318     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   319     07C2  1307               	bcf	7,6	;volatile
   320                           
   321                           ;main.c: 29:     TRISC7 = 1;
   322     07C3  1787               	bsf	7,7	;volatile
   323     07C4                     l637:
   324                           
   325                           ;main.c: 30:     UART_INIT();
   326     07C4  120A  118A  27AF  120A  118A  	fcall	_UART_INIT
   327     07C9                     l639:
   328                           
   329                           ;main.c: 31:     UART_Txstring("Enter some letters: ");
   330     07C9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   331     07CA  120A  118A  27DD  120A  118A  	fcall	_UART_Txstring
   332     07CF                     l641:
   333                           
   334                           ;main.c: 33:         UART_Txchar(UART_Rx());
   335     07CF  120A  118A  279B  120A  118A  	fcall	_UART_Rx
   336     07D4  120A  118A  27A4  120A  118A  	fcall	_UART_Txchar
   337     07D9  2FCF               	goto	l641
   338     07DA  120A  118A  2800   	ljmp	start
   339     07DD                     __end_of_main:
   340                           
   341                           	psect	text1
   342     07DD                     __ptext1:	
   343 ;; *************** function _UART_Txstring *****************
   344 ;; Defined at:
   345 ;;		line 45 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  s               1    wreg     PTR unsigned char 
   348 ;;		 -> STR_1(21), 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  s               1    2[COMMON] PTR unsigned char 
   351 ;;		 -> STR_1(21), 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         1       0       0       0       0
   363 ;;      Temps:          1       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; Hardware stack levels required when called: 1
   368 ;; This function calls:
   369 ;;		_UART_Txchar
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375     07DD                     _UART_Txstring:	
   376                           ;psect for function _UART_Txstring
   377                           
   378                           
   379                           ;incstack = 0
   380                           ; Regs used in _UART_Txstring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   381                           ;UART_Txstring@s stored from wreg
   382     07DD  00F2               	movwf	UART_Txstring@s
   383     07DE                     l627:
   384                           
   385                           ;main.c: 46:     while(*s){
   386     07DE  2FEF               	goto	l633
   387     07DF                     l629:
   388                           
   389                           ;main.c: 47:         UART_Txchar(*s++);
   390     07DF  0872               	movf	UART_Txstring@s,w
   391     07E0  0084               	movwf	4
   392     07E1  120A  118A  2003  120A  118A  	fcall	stringdir
   393     07E6  120A  118A  27A4  120A  118A  	fcall	_UART_Txchar
   394     07EB                     l631:
   395     07EB  3001               	movlw	1
   396     07EC  00F1               	movwf	??_UART_Txstring
   397     07ED  0871               	movf	??_UART_Txstring,w
   398     07EE  07F2               	addwf	UART_Txstring@s,f
   399     07EF                     l633:
   400                           
   401                           ;main.c: 46:     while(*s){
   402     07EF  0872               	movf	UART_Txstring@s,w
   403     07F0  0084               	movwf	4
   404     07F1  120A  118A  2003  120A  118A  	fcall	stringdir
   405     07F6  3A00               	xorlw	0
   406     07F7  1D03               	skipz
   407     07F8  2FFA               	goto	u41
   408     07F9  2FFB               	goto	u40
   409     07FA                     u41:
   410     07FA  2FDF               	goto	l629
   411     07FB                     u40:
   412     07FB                     l43:
   413     07FB  0008               	return
   414     07FC                     __end_of_UART_Txstring:
   415                           
   416                           	psect	text2
   417     07A4                     __ptext2:	
   418 ;; *************** function _UART_Txchar *****************
   419 ;; Defined at:
   420 ;;		line 51 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  a               1    wreg     unsigned char 
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  a               1    0[COMMON] unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         1       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         1       0       0       0       0
   438 ;;Total ram usage:        1 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;;		_UART_Txstring
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     07A4                     _UART_Txchar:	
   449                           ;psect for function _UART_Txchar
   450                           
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _UART_Txchar: [wreg]
   454                           ;UART_Txchar@a stored from wreg
   455     07A4  00F0               	movwf	UART_Txchar@a
   456     07A5                     l599:
   457                           
   458                           ;main.c: 52:     TXREG = a;
   459     07A5  0870               	movf	UART_Txchar@a,w
   460     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   461     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   462     07A8  0099               	movwf	25	;volatile
   463     07A9                     l46:	
   464                           ;main.c: 53:     while(!(TXIF));
   465                           
   466     07A9  1E0C               	btfss	12,4	;volatile
   467     07AA  2FAC               	goto	u11
   468     07AB  2FAD               	goto	u10
   469     07AC                     u11:
   470     07AC  2FA9               	goto	l46
   471     07AD                     u10:
   472     07AD                     l48:
   473                           
   474                           ;main.c: 54:     TXIF=0;
   475     07AD  120C               	bcf	12,4	;volatile
   476     07AE                     l49:
   477     07AE  0008               	return
   478     07AF                     __end_of_UART_Txchar:
   479                           
   480                           	psect	text3
   481     079B                     __ptext3:	
   482 ;; *************** function _UART_Rx *****************
   483 ;; Defined at:
   484 ;;		line 57 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     079B                     _UART_Rx:	
   512                           ;psect for function _UART_Rx
   513                           
   514     079B                     l613:	
   515                           ;incstack = 0
   516                           ; Regs used in _UART_Rx: [wreg]
   517                           
   518     079B                     l52:	
   519                           ;main.c: 58:     while(!(RCIF));
   520                           
   521     079B  1283               	bcf	3,5	;RP0=0, select bank0
   522     079C  1303               	bcf	3,6	;RP1=0, select bank0
   523     079D  1E8C               	btfss	12,5	;volatile
   524     079E  2FA0               	goto	u31
   525     079F  2FA1               	goto	u30
   526     07A0                     u31:
   527     07A0  2F9B               	goto	l52
   528     07A1                     u30:
   529     07A1                     l54:
   530                           
   531                           ;main.c: 59:     RCIF=0;
   532     07A1  128C               	bcf	12,5	;volatile
   533     07A2                     l615:
   534                           
   535                           ;main.c: 60:     return RCREG;
   536     07A2  081A               	movf	26,w	;volatile
   537     07A3                     l55:
   538     07A3  0008               	return
   539     07A4                     __end_of_UART_Rx:
   540                           
   541                           	psect	text4
   542     07AF                     __ptext4:	
   543 ;; *************** function _UART_INIT *****************
   544 ;; Defined at:
   545 ;;		line 38 in file "main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572     07AF                     _UART_INIT:	
   573                           ;psect for function _UART_INIT
   574                           
   575     07AF                     l601:	
   576                           ;incstack = 0
   577                           ; Regs used in _UART_INIT: [wreg]
   578                           
   579                           
   580                           ;main.c: 39:     TXSTA = 0X20;
   581     07AF  3020               	movlw	32
   582     07B0  1683               	bsf	3,5	;RP0=1, select bank1
   583     07B1  1303               	bcf	3,6	;RP1=0, select bank1
   584     07B2  0098               	movwf	24	;volatile
   585                           
   586                           ;main.c: 40:     RCSTA = 0X90;
   587     07B3  3090               	movlw	144
   588     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   589     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   590     07B6  0098               	movwf	24	;volatile
   591                           
   592                           ;main.c: 41:     SPBRG = 17;
   593     07B7  3011               	movlw	17
   594     07B8  1683               	bsf	3,5	;RP0=1, select bank1
   595     07B9  1303               	bcf	3,6	;RP1=0, select bank1
   596     07BA  0099               	movwf	25	;volatile
   597     07BB                     l603:
   598                           
   599                           ;main.c: 42:     TXIF=RCIF=0;
   600     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   601     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   602     07BD  128C               	bcf	12,5	;volatile
   603     07BE  120C               	bcf	12,4	;volatile
   604     07BF                     l37:
   605     07BF  0008               	return
   606     07C0                     __end_of_UART_INIT:
   607     007E                     btemp	set	126	;btemp
   608     007E                     wtemp0	set	126
   609                           
   610                           	psect	config
   611                           
   612                           ;Config register CONFIG @ 0x2007
   613                           ;	Oscillator Selection bits
   614                           ;	FOSC = EXTRC, RC oscillator
   615                           ;	Watchdog Timer Enable bit
   616                           ;	WDTE = OFF, WDT disabled
   617                           ;	Power-up Timer Enable bit
   618                           ;	PWRTE = OFF, PWRT disabled
   619                           ;	Brown-out Reset Enable bit
   620                           ;	BOREN = OFF, BOR disabled
   621                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   622                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   623                           ;	Data EEPROM Memory Code Protection bit
   624                           ;	CPD = OFF, Data EEPROM code protection off
   625                           ;	Flash Program Memory Write Enable bits
   626                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   627                           ;	In-Circuit Debugger Mode bit
   628                           ;	DEBUG = 0x1, unprogrammed default
   629                           ;	Flash Program Memory Code Protection bit
   630                           ;	CP = OFF, Code protection off
   631     2007                     	org	8199
   632     2007  3F3B               	dw	16187

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Txstring@s	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _main->_UART_Txstring
    _UART_Txstring->_UART_Txchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     108
                          _UART_INIT
                            _UART_Rx
                        _UART_Txchar
                      _UART_Txstring
 ---------------------------------------------------------------------------------
 (1) _UART_Txstring                                        2     2      0      93
                                              1 COMMON     2     2      0
                        _UART_Txchar
 ---------------------------------------------------------------------------------
 (2) _UART_Txchar                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
   _UART_Rx
   _UART_Txchar
   _UART_Txstring
     _UART_Txchar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 30 22:53:28 2024

                      pc 0002                       l43 07FB                       l52 079B  
                     l37 07BF                       l54 07A1                       l46 07A9  
                     l55 07A3                       l48 07AD                       l49 07AE  
                     u10 07AD                       u11 07AC                       u30 07A1  
                     u31 07A0                       u40 07FB                       u41 07FA  
                     fsr 0004                      l601 07AF                      l603 07BB  
                    l613 079B                      l615 07A2                      l631 07EB  
                    l633 07EF                      l641 07CF                      l627 07DE  
                    l635 07C0                      l629 07DF                      l637 07C4  
                    l639 07C9                      l599 07A5                      fsr0 0004  
                   STR_1 0009                     _RCIF 0065                     _TXIF 0064  
        __end_of_UART_Rx 07A4                     _main 07C0                     btemp 007E  
                   start 0000                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _TXREG 0019  
                  _TXSTA 0098                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07DD  
                 ??_main 0073                ??_UART_Rx 0070                   _TRISC6 043E  
                 _TRISC7 043F        __end_of_UART_INIT 07C0             ?_UART_Txchar 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070    __end_of_UART_Txstring 07FC  
             __pmaintext 07C0                  _UART_Rx 079B               __stringtab 0003  
                __ptext1 07DD                  __ptext2 07A4                  __ptext3 079B  
                __ptext4 07AF     end_of_initialization 07FC                _UART_INIT 07AF  
         UART_Txstring@s 0072               ?_UART_INIT 0070      start_initialization 07FC  
              ___latbits 0002                 ?_UART_Rx 0070              ??_UART_INIT 0070  
              __pstrings 0003            ??_UART_Txchar 0070            _UART_Txstring 07DD  
            __stringbase 0008           ?_UART_Txstring 0070      __end_of_UART_Txchar 07AF  
     __end_of__stringtab 0009             UART_Txchar@a 0070                stringcode 0003  
            _UART_Txchar 07A4          ??_UART_Txstring 0071                 stringdir 0003  
               stringtab 0003  
