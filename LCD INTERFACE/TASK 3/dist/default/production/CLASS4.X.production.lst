

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 18 23:58:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     0561                     __pidataBANK0:
   181                           
   182                           ;initializer for _arr
   183     0561  3453               	retlw	83
   184     0562  3445               	retlw	69
   185     0563  3454               	retlw	84
   186     0564  3420               	retlw	32
   187     0565  3453               	retlw	83
   188     0566  3450               	retlw	80
   189     0567  3444               	retlw	68
   190     0568  343A               	retlw	58
   191     0569  3420               	retlw	32
   192     056A  3420               	retlw	32
   193     056B  3420               	retlw	32
   194     056C  3420               	retlw	32
   195     056D  3472               	retlw	114
   196     056E  3470               	retlw	112
   197     056F  346D               	retlw	109
   198     0570  3400               	retlw	0
   199     0571  3400               	retlw	0
   200     0572  3400               	retlw	0
   201     0573  3400               	retlw	0
   202     0574  3400               	retlw	0
   203     0575  3400               	retlw	0
   204     0576  3400               	retlw	0
   205     0577  3400               	retlw	0
   206     0578  3400               	retlw	0
   207     0579  3400               	retlw	0
   208     057A  3400               	retlw	0
   209     057B  3400               	retlw	0
   210     057C  3400               	retlw	0
   211     057D  3400               	retlw	0
   212     057E  3400               	retlw	0
   213     0008                     _PORTD	set	8
   214     0007                     _PORTC	set	7
   215     0006                     _PORTB	set	6
   216     0081                     _OPTION_REG	set	129
   217     0088                     _TRISD	set	136
   218     0086                     _TRISB	set	134
   219     0087                     _TRISC	set	135
   220                           
   221                           	psect	cinit
   222     07E6                     start_initialization:	
   223                           ; #config settings
   224                           
   225     07E6                     __initialization:
   226                           
   227                           ; Initialize objects allocated to BANK0
   228     07E6  1383               	bcf	3,7	;select IRP bank0
   229     07E7  303E               	movlw	low (__pdataBANK0+30)
   230     07E8  00FD               	movwf	btemp+-1
   231     07E9  3005               	movlw	high __pidataBANK0
   232     07EA  00FE               	movwf	btemp
   233     07EB  3061               	movlw	low __pidataBANK0
   234     07EC  00FF               	movwf	btemp+1
   235     07ED  3020               	movlw	low __pdataBANK0
   236     07EE  0084               	movwf	4
   237     07EF  120A  118A  2512  120A  118A  	fcall	init_ram0
   238                           
   239                           ; Clear objects allocated to BANK0
   240     07F4  303E               	movlw	low __pbssBANK0
   241     07F5  0084               	movwf	4
   242     07F6  304E               	movlw	low (__pbssBANK0+16)
   243     07F7  120A  118A  24F8  120A  118A  	fcall	clear_ram0
   244     07FC                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247     07FC                     __end_of__initialization:
   248     07FC  0183               	clrf	3
   249     07FD  120A  118A  2D00   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssBANK0
   252     003E                     __pbssBANK0:
   253     003E                     _i:
   254     003E                     	ds	2
   255     0040                     _j:
   256     0040                     	ds	2
   257     0042                     _d1:
   258     0042                     	ds	2
   259     0044                     _d2:
   260     0044                     	ds	2
   261     0046                     _d3:
   262     0046                     	ds	2
   263     0048                     _d4:
   264     0048                     	ds	2
   265     004A                     _value:
   266     004A                     	ds	1
   267     004B                     _n:
   268     004B                     	ds	1
   269     004C                     _m:
   270     004C                     	ds	1
   271     004D                     _x:
   272     004D                     	ds	1
   273                           
   274                           	psect	dataBANK0
   275     0020                     __pdataBANK0:
   276     0020                     _arr:
   277     0020                     	ds	30
   278                           
   279                           	psect	inittext
   280     050E                     init_fetch0:	
   281                           ;	Called with low address in FSR and high address in W
   282                           
   283     050E  087E               	movf	btemp,w
   284     050F  008A               	movwf	10
   285     0510  087F               	movf	btemp+1,w
   286     0511  0082               	movwf	2
   287     0512                     init_ram0:	
   288                           ;Called with:
   289                           ;	high address of idata address in btemp 
   290                           ;	low address of idata address in btemp+1 
   291                           ;	low address of data in FSR
   292                           ;	high address + 1 of data in btemp-1
   293                           
   294     0512  120A  118A  250E  120A  118A  	fcall	init_fetch0
   295     0517  0080               	movwf	0
   296     0518  0A84               	incf	4,f
   297     0519  0804               	movf	4,w
   298     051A  067D               	xorwf	btemp+-1,w
   299     051B  1903               	btfsc	3,2
   300     051C  3400               	retlw	0
   301     051D  0AFF               	incf	btemp+1,f
   302     051E  1903               	btfsc	3,2
   303     051F  0AFE               	incf	btemp,f
   304     0520  2D12               	goto	init_ram0
   305                           
   306                           	psect	clrtext
   307     04F8                     clear_ram0:	
   308                           ;	Called with FSR containing the base address, and
   309                           ;	W with the last address+1
   310                           
   311     04F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   312     04F9                     clrloop0:
   313     04F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   314     04FA  0A84               	incf	4,f	;increment pointer
   315     04FB  0604               	xorwf	4,w	;XOR with final address
   316     04FC  1903               	btfsc	3,2	;have we reached the end yet?
   317     04FD  3400               	retlw	0	;all done for this memory range, return
   318     04FE  0604               	xorwf	4,w	;XOR again to restore value
   319     04FF  2CF9               	goto	clrloop0	;do the next byte
   320                           
   321                           	psect	cstackCOMMON
   322     0070                     __pcstackCOMMON:
   323     0070                     ?_init:
   324     0070                     ?_keyscane:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_lcd_cmd:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_lcd_cmd:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_lcd_data:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_lcd_data:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?___bmul:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?___wmul:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ___bmul@multiplicand:	
   349                           ; 2 bytes @ 0x0
   350                           
   351     0070                     ___wmul@multiplier:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 2 bytes @ 0x0
   356     0070                     	ds	1
   357     0071                     ??___bmul:
   358                           
   359                           ; 1 bytes @ 0x1
   360     0071                     	ds	1
   361     0072                     lcd_data@i:
   362     0072                     lcd_cmd@i:	
   363                           ; 1 bytes @ 0x2
   364                           
   365     0072                     ___bmul@product:	
   366                           ; 1 bytes @ 0x2
   367                           
   368     0072                     ___wmul@multiplicand:	
   369                           ; 1 bytes @ 0x2
   370                           
   371                           
   372                           ; 2 bytes @ 0x2
   373     0072                     	ds	1
   374     0073                     ??_init:
   375     0073                     ___bmul@multiplier:	
   376                           ; 1 bytes @ 0x3
   377                           
   378                           
   379                           ; 1 bytes @ 0x3
   380     0073                     	ds	1
   381     0074                     ??___wmul:
   382     0074                     ___wmul@product:	
   383                           ; 1 bytes @ 0x4
   384                           
   385                           
   386                           ; 2 bytes @ 0x4
   387     0074                     	ds	2
   388     0076                     ?___lwdiv:
   389     0076                     ___lwdiv@divisor:	
   390                           ; 2 bytes @ 0x6
   391                           
   392                           
   393                           ; 2 bytes @ 0x6
   394     0076                     	ds	2
   395     0078                     ___lwdiv@dividend:
   396                           
   397                           ; 2 bytes @ 0x8
   398     0078                     	ds	2
   399     007A                     ??___lwdiv:
   400                           
   401                           ; 1 bytes @ 0xA
   402     007A                     	ds	1
   403     007B                     ___lwdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0xB
   406     007B                     	ds	2
   407     007D                     ___lwdiv@counter:
   408                           
   409                           ; 1 bytes @ 0xD
   410     007D                     	ds	1
   411     007E                     ??_main:
   412                           
   413                           	psect	cstackBANK0
   414     004E                     __pcstackBANK0:	
   415                           ; 1 bytes @ 0xE
   416                           
   417     004E                     ?_lcd_output:
   418     004E                     lcd_output@i:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423     004E                     	ds	2
   424     0050                     ??_lcd_output:
   425                           
   426                           ; 1 bytes @ 0x2
   427     0050                     	ds	6
   428     0056                     ??_keyscane:
   429                           
   430                           ; 1 bytes @ 0x8
   431     0056                     	ds	1
   432                           
   433                           	psect	maintext
   434     0500                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 31 in file "CLASS4_RPM.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels required when called: 3
   460 ;; This function calls:
   461 ;;		_init
   462 ;;		_keyscane
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     0500                     _main:	
   469                           ;psect for function _main
   470                           
   471     0500                     l971:	
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   474                           
   475                           
   476                           ;CLASS4_RPM.c: 32:     init();
   477     0500  120A  118A  25E8  120A  118A  	fcall	_init
   478     0505                     l973:
   479                           
   480                           ;CLASS4_RPM.c: 34:         keyscane();
   481     0505  120A  118A  2650  120A  118A  	fcall	_keyscane
   482     050A  2D05               	goto	l973
   483     050B  120A  118A  2800   	ljmp	start
   484     050E                     __end_of_main:
   485                           
   486                           	psect	text1
   487     0650                     __ptext1:	
   488 ;; *************** function _keyscane *****************
   489 ;; Defined at:
   490 ;;		line 59 in file "CLASS4_RPM.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       1       0       0       0
   507 ;;      Totals:         0       1       0       0       0
   508 ;;Total ram usage:        1 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 2
   511 ;; This function calls:
   512 ;;		_lcd_cmd
   513 ;;		_lcd_data
   514 ;;		_lcd_output
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     0650                     _keyscane:	
   521                           ;psect for function _keyscane
   522                           
   523     0650                     l911:	
   524                           ;incstack = 0
   525                           ; Regs used in _keyscane: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   526                           
   527                           
   528                           ;CLASS4_RPM.c: 61:     value=PORTB&0XF0;
   529     0650  1283               	bcf	3,5	;RP0=0, select bank0
   530     0651  1303               	bcf	3,6	;RP1=0, select bank0
   531     0652  0806               	movf	6,w	;volatile
   532     0653  39F0               	andlw	240
   533     0654  00CA               	movwf	_value
   534                           
   535                           ;CLASS4_RPM.c: 62:     switch(value){
   536     0655  2EEC               	goto	l969
   537     0656                     l913:
   538                           
   539                           ;CLASS4_RPM.c: 64:             lcd_cmd(0X80);
   540     0656  3080               	movlw	128
   541     0657  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   542     065C                     l915:
   543                           
   544                           ;CLASS4_RPM.c: 65:             for(x=0;x<8;x++){
   545     065C  1283               	bcf	3,5	;RP0=0, select bank0
   546     065D  1303               	bcf	3,6	;RP1=0, select bank0
   547     065E  01CD               	clrf	_x
   548     065F                     l921:
   549                           
   550                           ;CLASS4_RPM.c: 66:                 lcd_data(arr[x]);
   551     065F  084D               	movf	_x,w
   552     0660  3E20               	addlw	(low (_arr| 0))& (0+255)
   553     0661  0084               	movwf	4
   554     0662  1383               	bcf	3,7	;select IRP bank0
   555     0663  0800               	movf	0,w
   556     0664  120A  118A  2521  120A  118A  	fcall	_lcd_data
   557     0669                     l923:
   558                           
   559                           ;CLASS4_RPM.c: 67:             }
   560     0669  3001               	movlw	1
   561     066A  1283               	bcf	3,5	;RP0=0, select bank0
   562     066B  1303               	bcf	3,6	;RP1=0, select bank0
   563     066C  00D6               	movwf	??_keyscane
   564     066D  0856               	movf	??_keyscane,w
   565     066E  07CD               	addwf	_x,f
   566     066F                     l925:
   567     066F  3008               	movlw	8
   568     0670  024D               	subwf	_x,w
   569     0671  1C03               	skipc
   570     0672  2E74               	goto	u311
   571     0673  2E75               	goto	u310
   572     0674                     u311:
   573     0674  2E5F               	goto	l921
   574     0675                     u310:
   575     0675                     l927:
   576                           
   577                           ;CLASS4_RPM.c: 68:             lcd_cmd(0X8C);
   578     0675  308C               	movlw	140
   579     0676  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   580     067B                     l929:
   581                           
   582                           ;CLASS4_RPM.c: 69:             for(x=12;x<15;x++){
   583     067B  300C               	movlw	12
   584     067C  1283               	bcf	3,5	;RP0=0, select bank0
   585     067D  1303               	bcf	3,6	;RP1=0, select bank0
   586     067E  00CD               	movwf	_x
   587     067F                     l935:
   588                           
   589                           ;CLASS4_RPM.c: 70:                 lcd_data(arr[x]);
   590     067F  084D               	movf	_x,w
   591     0680  3E20               	addlw	(low (_arr| 0))& (0+255)
   592     0681  0084               	movwf	4
   593     0682  1383               	bcf	3,7	;select IRP bank0
   594     0683  0800               	movf	0,w
   595     0684  120A  118A  2521  120A  118A  	fcall	_lcd_data
   596     0689                     l937:
   597                           
   598                           ;CLASS4_RPM.c: 71:             }
   599     0689  3001               	movlw	1
   600     068A  1283               	bcf	3,5	;RP0=0, select bank0
   601     068B  1303               	bcf	3,6	;RP1=0, select bank0
   602     068C  00D6               	movwf	??_keyscane
   603     068D  0856               	movf	??_keyscane,w
   604     068E  07CD               	addwf	_x,f
   605     068F                     l939:
   606     068F  300F               	movlw	15
   607     0690  024D               	subwf	_x,w
   608     0691  1C03               	skipc
   609     0692  2E94               	goto	u321
   610     0693  2E95               	goto	u320
   611     0694                     u321:
   612     0694  2E7F               	goto	l935
   613     0695                     u320:
   614     0695                     l941:
   615                           
   616                           ;CLASS4_RPM.c: 72:             lcd_cmd(0X88);
   617     0695  3088               	movlw	136
   618     0696  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   619                           
   620                           ;CLASS4_RPM.c: 73:             lcd_output(j);
   621     069B  1283               	bcf	3,5	;RP0=0, select bank0
   622     069C  1303               	bcf	3,6	;RP1=0, select bank0
   623     069D  0841               	movf	_j+1,w
   624     069E  00CF               	movwf	lcd_output@i+1
   625     069F  0840               	movf	_j,w
   626     06A0  00CE               	movwf	lcd_output@i
   627     06A1  120A  118A  26FB  120A  118A  	fcall	_lcd_output
   628                           
   629                           ;CLASS4_RPM.c: 74:             break;
   630     06A6  2EFA               	goto	l74
   631     06A7                     l943:
   632                           
   633                           ;CLASS4_RPM.c: 76:             j++;
   634     06A7  3001               	movlw	1
   635     06A8  07C0               	addwf	_j,f
   636     06A9  1803               	skipnc
   637     06AA  0AC1               	incf	_j+1,f
   638     06AB  3000               	movlw	0
   639     06AC  07C1               	addwf	_j+1,f
   640                           
   641                           ;CLASS4_RPM.c: 77:             if(j>5000){
   642     06AD  3013               	movlw	19
   643     06AE  0241               	subwf	_j+1,w
   644     06AF  3089               	movlw	137
   645     06B0  1903               	skipnz
   646     06B1  0240               	subwf	_j,w
   647     06B2  1C03               	skipc
   648     06B3  2EB5               	goto	u331
   649     06B4  2EB6               	goto	u330
   650     06B5                     u331:
   651     06B5  2EBA               	goto	l947
   652     06B6                     u330:
   653     06B6                     l945:
   654                           
   655                           ;CLASS4_RPM.c: 78:                 j=5000;
   656     06B6  3088               	movlw	136
   657     06B7  00C0               	movwf	_j
   658     06B8  3013               	movlw	19
   659     06B9  00C1               	movwf	_j+1
   660     06BA                     l947:
   661                           
   662                           ;CLASS4_RPM.c: 80:             lcd_cmd(0X88);
   663     06BA  3088               	movlw	136
   664     06BB  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   665     06C0                     l949:
   666                           
   667                           ;CLASS4_RPM.c: 81:             lcd_output(j);
   668     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   669     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   670     06C2  0841               	movf	_j+1,w
   671     06C3  00CF               	movwf	lcd_output@i+1
   672     06C4  0840               	movf	_j,w
   673     06C5  00CE               	movwf	lcd_output@i
   674     06C6  120A  118A  26FB  120A  118A  	fcall	_lcd_output
   675                           
   676                           ;CLASS4_RPM.c: 82:             break;
   677     06CB  2EFA               	goto	l74
   678     06CC                     l951:
   679                           
   680                           ;CLASS4_RPM.c: 84:             j--;
   681     06CC  3001               	movlw	1
   682     06CD  02C0               	subwf	_j,f
   683     06CE  3000               	movlw	0
   684     06CF  1C03               	skipc
   685     06D0  03C1               	decf	_j+1,f
   686     06D1  02C1               	subwf	_j+1,f
   687     06D2                     l953:
   688                           
   689                           ;CLASS4_RPM.c: 85:             if(j<1){
   690     06D2  0840               	movf	_j,w
   691     06D3  0441               	iorwf	_j+1,w
   692     06D4  1D03               	btfss	3,2
   693     06D5  2ED7               	goto	u341
   694     06D6  2ED8               	goto	u340
   695     06D7                     u341:
   696     06D7  2EDC               	goto	l957
   697     06D8                     u340:
   698     06D8                     l955:
   699                           
   700                           ;CLASS4_RPM.c: 86:                 j=1;
   701     06D8  3001               	movlw	1
   702     06D9  00C0               	movwf	_j
   703     06DA  3000               	movlw	0
   704     06DB  00C1               	movwf	_j+1
   705     06DC                     l957:
   706                           
   707                           ;CLASS4_RPM.c: 88:             lcd_cmd(0X88);
   708     06DC  3088               	movlw	136
   709     06DD  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   710     06E2  2EC0               	goto	l949
   711     06E3                     l961:
   712                           
   713                           ;CLASS4_RPM.c: 92:             j=0;
   714     06E3  01C0               	clrf	_j
   715     06E4  01C1               	clrf	_j+1
   716     06E5                     l963:
   717                           
   718                           ;CLASS4_RPM.c: 93:             lcd_cmd(0X88);
   719     06E5  3088               	movlw	136
   720     06E6  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   721     06EB  2EC0               	goto	l949
   722     06EC                     l969:
   723     06EC  084A               	movf	_value,w
   724                           
   725                           ; Switch size 1, requested type "simple"
   726                           ; Number of cases is 4, Range of values is 112 to 224
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte           13     7 (average)
   730                           ; jumptable            263     9 (fixed)
   731                           ;	Chosen strategy is simple_byte
   732     06ED  3A70               	xorlw	112	; case 112
   733     06EE  1903               	skipnz
   734     06EF  2EE3               	goto	l961
   735     06F0  3AC0               	xorlw	192	; case 176
   736     06F1  1903               	skipnz
   737     06F2  2ECC               	goto	l951
   738     06F3  3A60               	xorlw	96	; case 208
   739     06F4  1903               	skipnz
   740     06F5  2EA7               	goto	l943
   741     06F6  3A30               	xorlw	48	; case 224
   742     06F7  1903               	skipnz
   743     06F8  2E56               	goto	l913
   744     06F9  2EFA               	goto	l74
   745     06FA                     l74:
   746     06FA  0008               	return
   747     06FB                     __end_of_keyscane:
   748                           
   749                           	psect	text2
   750     06FB                     __ptext2:	
   751 ;; *************** function _lcd_output *****************
   752 ;; Defined at:
   753 ;;		line 99 in file "CLASS4_RPM.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  i               2    0[BANK0 ] unsigned int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       2       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       6       0       0       0
   770 ;;      Totals:         0       8       0       0       0
   771 ;;Total ram usage:        8 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 1
   774 ;; This function calls:
   775 ;;		___bmul
   776 ;;		___lwdiv
   777 ;;		___wmul
   778 ;;		_lcd_cmd
   779 ;;		_lcd_data
   780 ;; This function is called by:
   781 ;;		_keyscane
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     06FB                     _lcd_output:	
   786                           ;psect for function _lcd_output
   787                           
   788     06FB                     l873:	
   789                           ;incstack = 0
   790                           ; Regs used in _lcd_output: [wreg+status,2+status,0+pclath+cstack]
   791                           
   792                           
   793                           ;CLASS4_RPM.c: 100:     d4=(unsigned char)(i/1000);
   794     06FB  30E8               	movlw	232
   795     06FC  00F6               	movwf	___lwdiv@divisor
   796     06FD  3003               	movlw	3
   797     06FE  00F7               	movwf	___lwdiv@divisor+1
   798     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   799     0700  1303               	bcf	3,6	;RP1=0, select bank0
   800     0701  084F               	movf	lcd_output@i+1,w
   801     0702  00F9               	movwf	___lwdiv@dividend+1
   802     0703  084E               	movf	lcd_output@i,w
   803     0704  00F8               	movwf	___lwdiv@dividend
   804     0705  120A  118A  25A4  120A  118A  	fcall	___lwdiv
   805     070A  0876               	movf	?___lwdiv,w
   806     070B  1283               	bcf	3,5	;RP0=0, select bank0
   807     070C  1303               	bcf	3,6	;RP1=0, select bank0
   808     070D  00D0               	movwf	??_lcd_output
   809     070E  01D1               	clrf	??_lcd_output+1
   810     070F  0850               	movf	??_lcd_output,w
   811     0710  00C8               	movwf	_d4
   812     0711  0851               	movf	??_lcd_output+1,w
   813     0712  00C9               	movwf	_d4+1
   814                           
   815                           ;CLASS4_RPM.c: 101:     d3=(unsigned char)((i-(d4*1000))/100);
   816     0713  3064               	movlw	100
   817     0714  00F6               	movwf	___lwdiv@divisor
   818     0715  3000               	movlw	0
   819     0716  00F7               	movwf	___lwdiv@divisor+1
   820     0717  0849               	movf	_d4+1,w
   821     0718  00F1               	movwf	___wmul@multiplier+1
   822     0719  0848               	movf	_d4,w
   823     071A  00F0               	movwf	___wmul@multiplier
   824     071B  3018               	movlw	24
   825     071C  00F2               	movwf	___wmul@multiplicand
   826     071D  30FC               	movlw	252
   827     071E  00F3               	movwf	___wmul@multiplicand+1
   828     071F  120A  118A  257F  120A  118A  	fcall	___wmul
   829     0724  1283               	bcf	3,5	;RP0=0, select bank0
   830     0725  1303               	bcf	3,6	;RP1=0, select bank0
   831     0726  084E               	movf	lcd_output@i,w
   832     0727  0770               	addwf	?___wmul,w
   833     0728  00F8               	movwf	___lwdiv@dividend
   834     0729  084F               	movf	lcd_output@i+1,w
   835     072A  1803               	skipnc
   836     072B  0A4F               	incf	lcd_output@i+1,w
   837     072C  0771               	addwf	?___wmul+1,w
   838     072D  00F9               	movwf	___lwdiv@dividend+1
   839     072E  120A  118A  25A4  120A  118A  	fcall	___lwdiv
   840     0733  0876               	movf	?___lwdiv,w
   841     0734  1283               	bcf	3,5	;RP0=0, select bank0
   842     0735  1303               	bcf	3,6	;RP1=0, select bank0
   843     0736  00D0               	movwf	??_lcd_output
   844     0737  01D1               	clrf	??_lcd_output+1
   845     0738  0850               	movf	??_lcd_output,w
   846     0739  00C6               	movwf	_d3
   847     073A  0851               	movf	??_lcd_output+1,w
   848     073B  00C7               	movwf	_d3+1
   849                           
   850                           ;CLASS4_RPM.c: 102:     d2=(unsigned char)((i-(d4*1000)-(d3*100))/10);
   851     073C  300A               	movlw	10
   852     073D  00F6               	movwf	___lwdiv@divisor
   853     073E  3000               	movlw	0
   854     073F  00F7               	movwf	___lwdiv@divisor+1
   855     0740  0849               	movf	_d4+1,w
   856     0741  00F1               	movwf	___wmul@multiplier+1
   857     0742  0848               	movf	_d4,w
   858     0743  00F0               	movwf	___wmul@multiplier
   859     0744  3018               	movlw	24
   860     0745  00F2               	movwf	___wmul@multiplicand
   861     0746  30FC               	movlw	252
   862     0747  00F3               	movwf	___wmul@multiplicand+1
   863     0748  120A  118A  257F  120A  118A  	fcall	___wmul
   864     074D  0870               	movf	?___wmul,w
   865     074E  1283               	bcf	3,5	;RP0=0, select bank0
   866     074F  1303               	bcf	3,6	;RP1=0, select bank0
   867     0750  00D0               	movwf	??_lcd_output
   868     0751  0871               	movf	?___wmul+1,w
   869     0752  00D1               	movwf	??_lcd_output+1
   870     0753  0847               	movf	_d3+1,w
   871     0754  00F1               	movwf	___wmul@multiplier+1
   872     0755  0846               	movf	_d3,w
   873     0756  00F0               	movwf	___wmul@multiplier
   874     0757  309C               	movlw	156
   875     0758  00F2               	movwf	___wmul@multiplicand
   876     0759  30FF               	movlw	255
   877     075A  00F3               	movwf	___wmul@multiplicand+1
   878     075B  120A  118A  257F  120A  118A  	fcall	___wmul
   879     0760  0870               	movf	?___wmul,w
   880     0761  1283               	bcf	3,5	;RP0=0, select bank0
   881     0762  1303               	bcf	3,6	;RP1=0, select bank0
   882     0763  0750               	addwf	??_lcd_output,w
   883     0764  00D2               	movwf	??_lcd_output+2
   884     0765  0871               	movf	?___wmul+1,w
   885     0766  1803               	skipnc
   886     0767  0A71               	incf	?___wmul+1,w
   887     0768  0751               	addwf	??_lcd_output+1,w
   888     0769  00D3               	movwf	??_lcd_output+3
   889     076A  084E               	movf	lcd_output@i,w
   890     076B  0752               	addwf	??_lcd_output+2,w
   891     076C  00F8               	movwf	___lwdiv@dividend
   892     076D  084F               	movf	lcd_output@i+1,w
   893     076E  1803               	skipnc
   894     076F  0A4F               	incf	lcd_output@i+1,w
   895     0770  0753               	addwf	??_lcd_output+3,w
   896     0771  00F9               	movwf	___lwdiv@dividend+1
   897     0772  120A  118A  25A4  120A  118A  	fcall	___lwdiv
   898     0777  0876               	movf	?___lwdiv,w
   899     0778  1283               	bcf	3,5	;RP0=0, select bank0
   900     0779  1303               	bcf	3,6	;RP1=0, select bank0
   901     077A  00D4               	movwf	??_lcd_output+4
   902     077B  01D5               	clrf	??_lcd_output+5
   903     077C  0854               	movf	??_lcd_output+4,w
   904     077D  00C4               	movwf	_d2
   905     077E  0855               	movf	??_lcd_output+5,w
   906     077F  00C5               	movwf	_d2+1
   907                           
   908                           ;CLASS4_RPM.c: 103:     d1=(unsigned char)(i-(d4*1000)-(d3*100)-(d2*10));
   909     0780  3018               	movlw	24
   910     0781  00F0               	movwf	___bmul@multiplicand
   911     0782  0848               	movf	_d4,w
   912     0783  120A  118A  2535  120A  118A  	fcall	___bmul
   913     0788  1283               	bcf	3,5	;RP0=0, select bank0
   914     0789  1303               	bcf	3,6	;RP1=0, select bank0
   915     078A  00D0               	movwf	??_lcd_output
   916     078B  309C               	movlw	156
   917     078C  00F0               	movwf	___bmul@multiplicand
   918     078D  0846               	movf	_d3,w
   919     078E  120A  118A  2535  120A  118A  	fcall	___bmul
   920     0793  1283               	bcf	3,5	;RP0=0, select bank0
   921     0794  1303               	bcf	3,6	;RP1=0, select bank0
   922     0795  00D1               	movwf	??_lcd_output+1
   923     0796  30F6               	movlw	246
   924     0797  00F0               	movwf	___bmul@multiplicand
   925     0798  0844               	movf	_d2,w
   926     0799  120A  118A  2535  120A  118A  	fcall	___bmul
   927     079E  1283               	bcf	3,5	;RP0=0, select bank0
   928     079F  1303               	bcf	3,6	;RP1=0, select bank0
   929     07A0  0751               	addwf	??_lcd_output+1,w
   930     07A1  0750               	addwf	??_lcd_output,w
   931     07A2  074E               	addwf	lcd_output@i,w
   932     07A3  00D2               	movwf	??_lcd_output+2
   933     07A4  01D3               	clrf	??_lcd_output+3
   934     07A5  0852               	movf	??_lcd_output+2,w
   935     07A6  00C2               	movwf	_d1
   936     07A7  0853               	movf	??_lcd_output+3,w
   937     07A8  00C3               	movwf	_d1+1
   938                           
   939                           ;CLASS4_RPM.c: 105:     lcd_cmd(0X88);
   940     07A9  3088               	movlw	136
   941     07AA  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   942                           
   943                           ;CLASS4_RPM.c: 106:     lcd_data(0X30+d4);
   944     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   945     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   946     07B1  0848               	movf	_d4,w
   947     07B2  3E30               	addlw	48
   948     07B3  120A  118A  2521  120A  118A  	fcall	_lcd_data
   949                           
   950                           ;CLASS4_RPM.c: 107:     lcd_cmd(0X89);
   951     07B8  3089               	movlw	137
   952     07B9  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   953                           
   954                           ;CLASS4_RPM.c: 108:     lcd_data(0X30+d3);
   955     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   956     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   957     07C0  0846               	movf	_d3,w
   958     07C1  3E30               	addlw	48
   959     07C2  120A  118A  2521  120A  118A  	fcall	_lcd_data
   960                           
   961                           ;CLASS4_RPM.c: 109:     lcd_cmd(0X8A);
   962     07C7  308A               	movlw	138
   963     07C8  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   964                           
   965                           ;CLASS4_RPM.c: 110:     lcd_data(0X30+d2);
   966     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   967     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   968     07CF  0844               	movf	_d2,w
   969     07D0  3E30               	addlw	48
   970     07D1  120A  118A  2521  120A  118A  	fcall	_lcd_data
   971                           
   972                           ;CLASS4_RPM.c: 111:     lcd_cmd(0X8B);
   973     07D6  308B               	movlw	139
   974     07D7  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
   975                           
   976                           ;CLASS4_RPM.c: 112:     lcd_data(0X30+d1);
   977     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   978     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   979     07DE  0842               	movf	_d1,w
   980     07DF  3E30               	addlw	48
   981     07E0  120A  118A  2521  120A  118A  	fcall	_lcd_data
   982     07E5                     l77:
   983     07E5  0008               	return
   984     07E6                     __end_of_lcd_output:
   985                           
   986                           	psect	text3
   987     0521                     __ptext3:	
   988 ;; *************** function _lcd_data *****************
   989 ;; Defined at:
   990 ;;		line 116 in file "CLASS4_RPM.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  i               1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  i               1    2[COMMON] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0
  1006 ;;      Temps:          2       0       0       0       0
  1007 ;;      Totals:         3       0       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_keyscane
  1014 ;;		_lcd_output
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018     0521                     _lcd_data:	
  1019                           ;psect for function _lcd_data
  1020                           
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1024                           ;lcd_data@i stored from wreg
  1025     0521  00F2               	movwf	lcd_data@i
  1026     0522                     l809:
  1027                           
  1028                           ;CLASS4_RPM.c: 117:     PORTC|=0x08;
  1029     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0524  1587               	bsf	7,3	;volatile
  1032     0525                     l811:
  1033                           
  1034                           ;CLASS4_RPM.c: 118:     PORTD=i;
  1035     0525  0872               	movf	lcd_data@i,w
  1036     0526  0088               	movwf	8	;volatile
  1037     0527                     l813:
  1038                           
  1039                           ;CLASS4_RPM.c: 119:     PORTC|=0X01;
  1040     0527  1407               	bsf	7,0	;volatile
  1041     0528                     l815:
  1042                           
  1043                           ;CLASS4_RPM.c: 120:     PORTC&=~0X01;
  1044     0528  30FE               	movlw	254
  1045     0529  00F0               	movwf	??_lcd_data
  1046     052A  0870               	movf	??_lcd_data,w
  1047     052B  0587               	andwf	7,f	;volatile
  1048     052C                     l817:
  1049                           
  1050                           ;CLASS4_RPM.c: 121:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1051     052C  30C3               	movlw	195
  1052     052D  00F1               	movwf	??_lcd_data+1
  1053     052E  30CD               	movlw	205
  1054     052F  00F0               	movwf	??_lcd_data
  1055     0530                     u357:
  1056     0530  0BF0               	decfsz	??_lcd_data,f
  1057     0531  2D30               	goto	u357
  1058     0532  0BF1               	decfsz	??_lcd_data+1,f
  1059     0533  2D30               	goto	u357
  1060     0534                     l80:
  1061     0534  0008               	return
  1062     0535                     __end_of_lcd_data:
  1063                           
  1064                           	psect	text4
  1065     057F                     __ptext4:	
  1066 ;; *************** function ___wmul *****************
  1067 ;; Defined at:
  1068 ;;		line 15 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  multiplier      2    0[COMMON] unsigned int 
  1071 ;;  multiplicand    2    2[COMMON] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  product         2    4[COMMON] unsigned int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    0[COMMON] unsigned int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         4       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0
  1086 ;;      Totals:         6       0       0       0       0
  1087 ;;Total ram usage:        6 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_lcd_output
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096     057F                     ___wmul:	
  1097                           ;psect for function ___wmul
  1098                           
  1099     057F                     l819:	
  1100                           ;incstack = 0
  1101                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1102                           
  1103     057F  01F4               	clrf	___wmul@product
  1104     0580  01F5               	clrf	___wmul@product+1
  1105     0581                     l821:
  1106     0581  1C70               	btfss	___wmul@multiplier,0
  1107     0582  2D84               	goto	u181
  1108     0583  2D85               	goto	u180
  1109     0584                     u181:
  1110     0584  2D8B               	goto	l169
  1111     0585                     u180:
  1112     0585                     l823:
  1113     0585  0872               	movf	___wmul@multiplicand,w
  1114     0586  07F4               	addwf	___wmul@product,f
  1115     0587  1803               	skipnc
  1116     0588  0AF5               	incf	___wmul@product+1,f
  1117     0589  0873               	movf	___wmul@multiplicand+1,w
  1118     058A  07F5               	addwf	___wmul@product+1,f
  1119     058B                     l169:
  1120     058B  3001               	movlw	1
  1121     058C                     u195:
  1122     058C  1003               	clrc
  1123     058D  0DF2               	rlf	___wmul@multiplicand,f
  1124     058E  0DF3               	rlf	___wmul@multiplicand+1,f
  1125     058F  3EFF               	addlw	-1
  1126     0590  1D03               	skipz
  1127     0591  2D8C               	goto	u195
  1128     0592                     l825:
  1129     0592  3001               	movlw	1
  1130     0593                     u205:
  1131     0593  1003               	clrc
  1132     0594  0CF1               	rrf	___wmul@multiplier+1,f
  1133     0595  0CF0               	rrf	___wmul@multiplier,f
  1134     0596  3EFF               	addlw	-1
  1135     0597  1D03               	skipz
  1136     0598  2D93               	goto	u205
  1137     0599                     l827:
  1138     0599  0870               	movf	___wmul@multiplier,w
  1139     059A  0471               	iorwf	___wmul@multiplier+1,w
  1140     059B  1D03               	btfss	3,2
  1141     059C  2D9E               	goto	u211
  1142     059D  2D9F               	goto	u210
  1143     059E                     u211:
  1144     059E  2D81               	goto	l821
  1145     059F                     u210:
  1146     059F                     l829:
  1147     059F  0875               	movf	___wmul@product+1,w
  1148     05A0  00F1               	movwf	?___wmul+1
  1149     05A1  0874               	movf	___wmul@product,w
  1150     05A2  00F0               	movwf	?___wmul
  1151     05A3                     l171:
  1152     05A3  0008               	return
  1153     05A4                     __end_of___wmul:
  1154                           
  1155                           	psect	text5
  1156     05A4                     __ptext5:	
  1157 ;; *************** function ___lwdiv *****************
  1158 ;; Defined at:
  1159 ;;		line 5 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/lwdiv.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  divisor         2    6[COMMON] unsigned int 
  1162 ;;  dividend        2    8[COMMON] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  quotient        2   11[COMMON] unsigned int 
  1165 ;;  counter         1   13[COMMON] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2    6[COMMON] unsigned int 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         4       0       0       0       0
  1176 ;;      Locals:         3       0       0       0       0
  1177 ;;      Temps:          1       0       0       0       0
  1178 ;;      Totals:         8       0       0       0       0
  1179 ;;Total ram usage:        8 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_lcd_output
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     05A4                     ___lwdiv:	
  1189                           ;psect for function ___lwdiv
  1190                           
  1191     05A4                     l847:	
  1192                           ;incstack = 0
  1193                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1194                           
  1195     05A4  01FB               	clrf	___lwdiv@quotient
  1196     05A5  01FC               	clrf	___lwdiv@quotient+1
  1197     05A6                     l849:
  1198     05A6  0876               	movf	___lwdiv@divisor,w
  1199     05A7  0477               	iorwf	___lwdiv@divisor+1,w
  1200     05A8  1903               	btfsc	3,2
  1201     05A9  2DAB               	goto	u241
  1202     05AA  2DAC               	goto	u240
  1203     05AB                     u241:
  1204     05AB  2DE3               	goto	l869
  1205     05AC                     u240:
  1206     05AC                     l851:
  1207     05AC  01FD               	clrf	___lwdiv@counter
  1208     05AD  0AFD               	incf	___lwdiv@counter,f
  1209     05AE  2DBA               	goto	l857
  1210     05AF                     l853:
  1211     05AF  3001               	movlw	1
  1212     05B0                     u255:
  1213     05B0  1003               	clrc
  1214     05B1  0DF6               	rlf	___lwdiv@divisor,f
  1215     05B2  0DF7               	rlf	___lwdiv@divisor+1,f
  1216     05B3  3EFF               	addlw	-1
  1217     05B4  1D03               	skipz
  1218     05B5  2DB0               	goto	u255
  1219     05B6                     l855:
  1220     05B6  3001               	movlw	1
  1221     05B7  00FA               	movwf	??___lwdiv
  1222     05B8  087A               	movf	??___lwdiv,w
  1223     05B9  07FD               	addwf	___lwdiv@counter,f
  1224     05BA                     l857:
  1225     05BA  1FF7               	btfss	___lwdiv@divisor+1,7
  1226     05BB  2DBD               	goto	u261
  1227     05BC  2DBE               	goto	u260
  1228     05BD                     u261:
  1229     05BD  2DAF               	goto	l853
  1230     05BE                     u260:
  1231     05BE                     l859:
  1232     05BE  3001               	movlw	1
  1233     05BF                     u275:
  1234     05BF  1003               	clrc
  1235     05C0  0DFB               	rlf	___lwdiv@quotient,f
  1236     05C1  0DFC               	rlf	___lwdiv@quotient+1,f
  1237     05C2  3EFF               	addlw	-1
  1238     05C3  1D03               	skipz
  1239     05C4  2DBF               	goto	u275
  1240     05C5  0877               	movf	___lwdiv@divisor+1,w
  1241     05C6  0279               	subwf	___lwdiv@dividend+1,w
  1242     05C7  1D03               	skipz
  1243     05C8  2DCB               	goto	u285
  1244     05C9  0876               	movf	___lwdiv@divisor,w
  1245     05CA  0278               	subwf	___lwdiv@dividend,w
  1246     05CB                     u285:
  1247     05CB  1C03               	skipc
  1248     05CC  2DCE               	goto	u281
  1249     05CD  2DCF               	goto	u280
  1250     05CE                     u281:
  1251     05CE  2DD6               	goto	l865
  1252     05CF                     u280:
  1253     05CF                     l861:
  1254     05CF  0876               	movf	___lwdiv@divisor,w
  1255     05D0  02F8               	subwf	___lwdiv@dividend,f
  1256     05D1  0877               	movf	___lwdiv@divisor+1,w
  1257     05D2  1C03               	skipc
  1258     05D3  03F9               	decf	___lwdiv@dividend+1,f
  1259     05D4  02F9               	subwf	___lwdiv@dividend+1,f
  1260     05D5                     l863:
  1261     05D5  147B               	bsf	___lwdiv@quotient,0
  1262     05D6                     l865:
  1263     05D6  3001               	movlw	1
  1264     05D7                     u295:
  1265     05D7  1003               	clrc
  1266     05D8  0CF7               	rrf	___lwdiv@divisor+1,f
  1267     05D9  0CF6               	rrf	___lwdiv@divisor,f
  1268     05DA  3EFF               	addlw	-1
  1269     05DB  1D03               	skipz
  1270     05DC  2DD7               	goto	u295
  1271     05DD                     l867:
  1272     05DD  3001               	movlw	1
  1273     05DE  02FD               	subwf	___lwdiv@counter,f
  1274     05DF  1D03               	btfss	3,2
  1275     05E0  2DE2               	goto	u301
  1276     05E1  2DE3               	goto	u300
  1277     05E2                     u301:
  1278     05E2  2DBE               	goto	l859
  1279     05E3                     u300:
  1280     05E3                     l869:
  1281     05E3  087C               	movf	___lwdiv@quotient+1,w
  1282     05E4  00F7               	movwf	?___lwdiv+1
  1283     05E5  087B               	movf	___lwdiv@quotient,w
  1284     05E6  00F6               	movwf	?___lwdiv
  1285     05E7                     l449:
  1286     05E7  0008               	return
  1287     05E8                     __end_of___lwdiv:
  1288                           
  1289                           	psect	text6
  1290     0535                     __ptext6:	
  1291 ;; *************** function ___bmul *****************
  1292 ;; Defined at:
  1293 ;;		line 4 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul8.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  multiplier      1    wreg     unsigned char 
  1296 ;;  multiplicand    1    0[COMMON] unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  multiplier      1    3[COMMON] unsigned char 
  1299 ;;  product         1    2[COMMON] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         1       0       0       0       0
  1310 ;;      Locals:         2       0       0       0       0
  1311 ;;      Temps:          1       0       0       0       0
  1312 ;;      Totals:         4       0       0       0       0
  1313 ;;Total ram usage:        4 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_lcd_output
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322     0535                     ___bmul:	
  1323                           ;psect for function ___bmul
  1324                           
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1328                           ;___bmul@multiplier stored from wreg
  1329     0535  00F3               	movwf	___bmul@multiplier
  1330     0536                     l833:
  1331     0536  01F2               	clrf	___bmul@product
  1332     0537                     l835:
  1333     0537  1C73               	btfss	___bmul@multiplier,0
  1334     0538  2D3A               	goto	u221
  1335     0539  2D3B               	goto	u220
  1336     053A                     u221:
  1337     053A  2D3F               	goto	l839
  1338     053B                     u220:
  1339     053B                     l837:
  1340     053B  0870               	movf	___bmul@multiplicand,w
  1341     053C  00F1               	movwf	??___bmul
  1342     053D  0871               	movf	??___bmul,w
  1343     053E  07F2               	addwf	___bmul@product,f
  1344     053F                     l839:
  1345     053F  1003               	clrc
  1346     0540  0DF0               	rlf	___bmul@multiplicand,f
  1347     0541                     l841:
  1348     0541  1003               	clrc
  1349     0542  0CF3               	rrf	___bmul@multiplier,f
  1350     0543  0873               	movf	___bmul@multiplier,w
  1351     0544  1D03               	btfss	3,2
  1352     0545  2D47               	goto	u231
  1353     0546  2D48               	goto	u230
  1354     0547                     u231:
  1355     0547  2D37               	goto	l835
  1356     0548                     u230:
  1357     0548                     l843:
  1358     0548  0872               	movf	___bmul@product,w
  1359     0549                     l195:
  1360     0549  0008               	return
  1361     054A                     __end_of___bmul:
  1362                           
  1363                           	psect	text7
  1364     05E8                     __ptext7:	
  1365 ;; *************** function _init *****************
  1366 ;; Defined at:
  1367 ;;		line 38 in file "CLASS4_RPM.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 1
  1388 ;; This function calls:
  1389 ;;		_lcd_cmd
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     05E8                     _init:	
  1396                           ;psect for function _init
  1397                           
  1398     05E8                     l875:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;CLASS4_RPM.c: 39:     TRISC=0X00;
  1404     05E8  1683               	bsf	3,5	;RP0=1, select bank1
  1405     05E9  1303               	bcf	3,6	;RP1=0, select bank1
  1406     05EA  0187               	clrf	7	;volatile
  1407     05EB                     l877:
  1408                           
  1409                           ;CLASS4_RPM.c: 40:     TRISB=0XF0;
  1410     05EB  30F0               	movlw	240
  1411     05EC  0086               	movwf	6	;volatile
  1412     05ED                     l879:
  1413                           
  1414                           ;CLASS4_RPM.c: 41:     TRISD=0X00;
  1415     05ED  0188               	clrf	8	;volatile
  1416     05EE                     l881:
  1417                           
  1418                           ;CLASS4_RPM.c: 42:     PORTB=0X00;
  1419     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1420     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1421     05F0  0186               	clrf	6	;volatile
  1422     05F1                     l883:
  1423                           
  1424                           ;CLASS4_RPM.c: 43:     OPTION_REG&=0x7F;
  1425     05F1  307F               	movlw	127
  1426     05F2  00F3               	movwf	??_init
  1427     05F3  0873               	movf	??_init,w
  1428     05F4  1683               	bsf	3,5	;RP0=1, select bank1
  1429     05F5  1303               	bcf	3,6	;RP1=0, select bank1
  1430     05F6  0581               	andwf	1,f	;volatile
  1431     05F7                     l885:
  1432                           
  1433                           ;CLASS4_RPM.c: 44:     lcd_cmd(0X38);
  1434     05F7  3038               	movlw	56
  1435     05F8  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1436     05FD                     l887:
  1437                           
  1438                           ;CLASS4_RPM.c: 45:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1439     05FD  30C3               	movlw	195
  1440     05FE  00F4               	movwf	??_init+1
  1441     05FF  30CD               	movlw	205
  1442     0600  00F3               	movwf	??_init
  1443     0601                     u367:
  1444     0601  0BF3               	decfsz	??_init,f
  1445     0602  2E01               	goto	u367
  1446     0603  0BF4               	decfsz	??_init+1,f
  1447     0604  2E01               	goto	u367
  1448     0605                     l889:
  1449                           
  1450                           ;CLASS4_RPM.c: 46:     lcd_cmd(0X38);
  1451     0605  3038               	movlw	56
  1452     0606  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1453     060B                     l891:
  1454                           
  1455                           ;CLASS4_RPM.c: 47:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1456     060B  30C3               	movlw	195
  1457     060C  00F4               	movwf	??_init+1
  1458     060D  30CD               	movlw	205
  1459     060E  00F3               	movwf	??_init
  1460     060F                     u377:
  1461     060F  0BF3               	decfsz	??_init,f
  1462     0610  2E0F               	goto	u377
  1463     0611  0BF4               	decfsz	??_init+1,f
  1464     0612  2E0F               	goto	u377
  1465     0613                     l893:
  1466                           
  1467                           ;CLASS4_RPM.c: 48:     lcd_cmd(0X38);
  1468     0613  3038               	movlw	56
  1469     0614  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1470     0619                     l895:
  1471                           
  1472                           ;CLASS4_RPM.c: 49:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1473     0619  30C3               	movlw	195
  1474     061A  00F4               	movwf	??_init+1
  1475     061B  30CD               	movlw	205
  1476     061C  00F3               	movwf	??_init
  1477     061D                     u387:
  1478     061D  0BF3               	decfsz	??_init,f
  1479     061E  2E1D               	goto	u387
  1480     061F  0BF4               	decfsz	??_init+1,f
  1481     0620  2E1D               	goto	u387
  1482     0621                     l897:
  1483                           
  1484                           ;CLASS4_RPM.c: 50:     lcd_cmd(0X06);
  1485     0621  3006               	movlw	6
  1486     0622  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1487     0627                     l899:
  1488                           
  1489                           ;CLASS4_RPM.c: 51:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1490     0627  30C3               	movlw	195
  1491     0628  00F4               	movwf	??_init+1
  1492     0629  30CD               	movlw	205
  1493     062A  00F3               	movwf	??_init
  1494     062B                     u397:
  1495     062B  0BF3               	decfsz	??_init,f
  1496     062C  2E2B               	goto	u397
  1497     062D  0BF4               	decfsz	??_init+1,f
  1498     062E  2E2B               	goto	u397
  1499     062F                     l901:
  1500                           
  1501                           ;CLASS4_RPM.c: 52:     lcd_cmd(0X0C);
  1502     062F  300C               	movlw	12
  1503     0630  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1504     0635                     l903:
  1505                           
  1506                           ;CLASS4_RPM.c: 53:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1507     0635  30C3               	movlw	195
  1508     0636  00F4               	movwf	??_init+1
  1509     0637  30CD               	movlw	205
  1510     0638  00F3               	movwf	??_init
  1511     0639                     u407:
  1512     0639  0BF3               	decfsz	??_init,f
  1513     063A  2E39               	goto	u407
  1514     063B  0BF4               	decfsz	??_init+1,f
  1515     063C  2E39               	goto	u407
  1516     063D                     l905:
  1517                           
  1518                           ;CLASS4_RPM.c: 54:     lcd_cmd(0X01);
  1519     063D  3001               	movlw	1
  1520     063E  120A  118A  254A  120A  118A  	fcall	_lcd_cmd
  1521     0643                     l907:
  1522                           
  1523                           ;CLASS4_RPM.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1524     0643  30C3               	movlw	195
  1525     0644  00F4               	movwf	??_init+1
  1526     0645  30CD               	movlw	205
  1527     0646  00F3               	movwf	??_init
  1528     0647                     u417:
  1529     0647  0BF3               	decfsz	??_init,f
  1530     0648  2E47               	goto	u417
  1531     0649  0BF4               	decfsz	??_init+1,f
  1532     064A  2E47               	goto	u417
  1533     064B                     l909:
  1534                           
  1535                           ;CLASS4_RPM.c: 56:     j=0;
  1536     064B  1283               	bcf	3,5	;RP0=0, select bank0
  1537     064C  1303               	bcf	3,6	;RP1=0, select bank0
  1538     064D  01C0               	clrf	_j
  1539     064E  01C1               	clrf	_j+1
  1540     064F                     l59:
  1541     064F  0008               	return
  1542     0650                     __end_of_init:
  1543                           
  1544                           	psect	text8
  1545     054A                     __ptext8:	
  1546 ;; *************** function _lcd_cmd *****************
  1547 ;; Defined at:
  1548 ;;		line 124 in file "CLASS4_RPM.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  i               1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               1    2[COMMON] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0
  1565 ;;      Totals:         3       0       0       0       0
  1566 ;;Total ram usage:        3 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_init
  1572 ;;		_keyscane
  1573 ;;		_lcd_output
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577     054A                     _lcd_cmd:	
  1578                           ;psect for function _lcd_cmd
  1579                           
  1580                           
  1581                           ;incstack = 0
  1582                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1583                           ;lcd_cmd@i stored from wreg
  1584     054A  00F2               	movwf	lcd_cmd@i
  1585     054B                     l801:
  1586                           
  1587                           ;CLASS4_RPM.c: 125:     PORTC&=~0X08;
  1588     054B  30F7               	movlw	247
  1589     054C  00F0               	movwf	??_lcd_cmd
  1590     054D  0870               	movf	??_lcd_cmd,w
  1591     054E  1283               	bcf	3,5	;RP0=0, select bank0
  1592     054F  1303               	bcf	3,6	;RP1=0, select bank0
  1593     0550  0587               	andwf	7,f	;volatile
  1594     0551                     l803:
  1595                           
  1596                           ;CLASS4_RPM.c: 126:     PORTD=i;
  1597     0551  0872               	movf	lcd_cmd@i,w
  1598     0552  0088               	movwf	8	;volatile
  1599     0553                     l805:
  1600                           
  1601                           ;CLASS4_RPM.c: 127:     PORTC|=0X01;
  1602     0553  1407               	bsf	7,0	;volatile
  1603     0554                     l807:
  1604                           
  1605                           ;CLASS4_RPM.c: 128:     PORTC&=~0X01;
  1606     0554  30FE               	movlw	254
  1607     0555  00F0               	movwf	??_lcd_cmd
  1608     0556  0870               	movf	??_lcd_cmd,w
  1609     0557  0587               	andwf	7,f	;volatile
  1610                           
  1611                           ;CLASS4_RPM.c: 129:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1612     0558  30C3               	movlw	195
  1613     0559  00F1               	movwf	??_lcd_cmd+1
  1614     055A  30CD               	movlw	205
  1615     055B  00F0               	movwf	??_lcd_cmd
  1616     055C                     u427:
  1617     055C  0BF0               	decfsz	??_lcd_cmd,f
  1618     055D  2D5C               	goto	u427
  1619     055E  0BF1               	decfsz	??_lcd_cmd+1,f
  1620     055F  2D5C               	goto	u427
  1621     0560                     l83:
  1622     0560  0008               	return
  1623     0561                     __end_of_lcd_cmd:
  1624     007E                     btemp	set	126	;btemp
  1625     007E                     wtemp0	set	126
  1626                           
  1627                           	psect	config
  1628                           
  1629                           ;Config register CONFIG @ 0x2007
  1630                           ;	Oscillator Selection bits
  1631                           ;	FOSC = EXTRC, RC oscillator
  1632                           ;	Watchdog Timer Enable bit
  1633                           ;	WDTE = OFF, WDT disabled
  1634                           ;	Power-up Timer Enable bit
  1635                           ;	PWRTE = OFF, PWRT disabled
  1636                           ;	Brown-out Reset Enable bit
  1637                           ;	BOREN = OFF, BOR disabled
  1638                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1639                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1640                           ;	Data EEPROM Memory Code Protection bit
  1641                           ;	CPD = OFF, Data EEPROM code protection off
  1642                           ;	Flash Program Memory Write Enable bits
  1643                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1644                           ;	In-Circuit Debugger Mode bit
  1645                           ;	DEBUG = 0x1, unprogrammed default
  1646                           ;	Flash Program Memory Code Protection bit
  1647                           ;	CP = OFF, Code protection off
  1648     2007                     	org	8199
  1649     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_output->___lwdiv
    ___lwdiv->___wmul
    _init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_keyscane
    _keyscane->_lcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                               _init
                           _keyscane
 ---------------------------------------------------------------------------------
 (1) _keyscane                                             1     1      0    1966
                                              8 BANK0      1     1      0
                            _lcd_cmd
                           _lcd_data
                         _lcd_output
 ---------------------------------------------------------------------------------
 (2) _lcd_output                                           8     6      2    1922
                                              0 BANK0      8     6      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcd_cmd
   _keyscane
     _lcd_cmd
     _lcd_data
     _lcd_output
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _lcd_cmd
       _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 18 23:58:23 2024

                      _i 003E                        _j 0040                        _m 004C  
                      _n 004B                        _x 004D                        pc 0002  
         ___bmul@product 0072                       l80 0534                       l74 06FA  
                     l83 0560                       l59 064F                       l77 07E5  
                     _d1 0042                       _d2 0044                       _d3 0046  
                     _d4 0048                       fsr 0004      ___wmul@multiplicand 0072  
                    l171 05A3                      l169 058B                      l195 0549  
                    l801 054B                      l449 05E7                      l803 0551  
                    l811 0525                      l805 0553                      l901 062F  
                    l821 0581                      l813 0527                      l807 0554  
                    l903 0635                      l823 0585                      l815 0528  
                    l911 0650                      l905 063D                      l841 0541  
                    l833 0536                      l825 0592                      l817 052C  
                    l809 0522                      l921 065F                      l913 0656  
                    l907 0643                      l843 0548                      l835 0537  
                    l851 05AC                      l827 0599                      l819 057F  
                    l923 0669                      l915 065C                      l909 064B  
                    l837 053B                      l861 05CF                      l853 05AF  
                    l829 059F                      l941 0695                      l925 066F  
                    l839 053F                      l863 05D5                      l855 05B6  
                    l847 05A4                      l951 06CC                      l943 06A7  
                    l935 067F                      l927 0675                      l881 05EE  
                    l865 05D6                      l857 05BA                      l849 05A6  
                    l873 06FB                      l961 06E3                      l953 06D2  
                    l945 06B6                      l937 0689                      l929 067B  
                    l891 060B                      l883 05F1                      l875 05E8  
                    l867 05DD                      l859 05BE                      l963 06E5  
                    l955 06D8                      l947 06BA                      l939 068F  
                    l971 0500                      l893 0613                      l885 05F7  
                    l877 05EB                      l869 05E3                      l957 06DC  
                    l949 06C0                      l973 0505                      l895 0619  
                    l887 05FD                      l879 05ED                      l897 0621  
                    l889 0605                      l969 06EC                      l899 0627  
                    u210 059F                      u211 059E                      u220 053B  
                    u300 05E3                      u221 053A                      u301 05E2  
                    u205 0593                      u230 0548                      u310 0675  
                    u231 0547                      u311 0674                      u240 05AC  
                    u320 0695                      u241 05AB                      u321 0694  
                    u330 06B6                      u331 06B5                      u260 05BE  
                    u180 0585                      u340 06D8                      u261 05BD  
                    u181 0584                      u341 06D7                      u407 0639  
                    u255 05B0                      u280 05CF                      u417 0647  
                    u281 05CE                      u427 055C                      u275 05BF  
                    u195 058C                      u285 05CB                      u357 0530  
                    u367 0601                      u295 05D7                      u377 060F  
                    u387 061D                      u397 062B                      _arr 0020  
                    fsr0 0004                      indf 0000                     _main 0500  
                   _init 05E8                     btemp 007E              lcd_output@i 004E  
                   start 0000        ___bmul@multiplier 0073                    ?_main 0070  
                  ?_init 0070          __end_of___lwdiv 05E8                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcd_cmd 0561  
                  _value 004A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E6             __end_of_main 050E  
           __end_of_init 0650                   ??_main 007E                   ??_init 0073  
       __end_of_lcd_data 0535                   ___bmul 0535                   ___wmul 057F  
              ??___lwdiv 007A         __end_of_keyscane 06FB                ??_lcd_cmd 0070  
__end_of__initialization 07FC      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0561               __pbssBANK0 003E               __pmaintext 0500  
                ?___bmul 0070                  ?___wmul 0070               _lcd_output 06FB  
              ?_lcd_data 0070                ?_keyscane 0070                  ___lwdiv 05A4  
                __ptext1 0650                  __ptext2 06FB                  __ptext3 0521  
                __ptext4 057F                  __ptext5 05A4                  __ptext6 0535  
                __ptext7 05E8                  __ptext8 054A                  _lcd_cmd 054A  
             ??_lcd_data 0070                  clrloop0 04F9     end_of_initialization 07FC  
             ??_keyscane 0056              ?_lcd_output 004E           __end_of___bmul 054A  
         __end_of___wmul 05A4      start_initialization 07E6                 ??___bmul 0071  
               ??___wmul 0074               init_fetch0 050E              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 004E         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?_lcd_cmd 0070         ___lwdiv@quotient 007B  
         ___wmul@product 0074                clear_ram0 04F8                lcd_data@i 0072  
      ___wmul@multiplier 0070             ??_lcd_output 0050       __end_of_lcd_output 07E6  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 _lcd_data 0521  
               _keyscane 0650                 lcd_cmd@i 0072                 init_ram0 0512  
             _OPTION_REG 0081  
