

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 19 13:30:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180                           
   181                           	psect	idataBANK0
   182     04E2                     __pidataBANK0:
   183                           
   184                           ;initializer for compare@F1041
   185     04E2  3442               	retlw	66
   186     04E3  3441               	retlw	65
   187     04E4  3454               	retlw	84
   188     04E5  3454               	retlw	84
   189     04E6  3420               	retlw	32
   190     04E7  344E               	retlw	78
   191     04E8  344F               	retlw	79
   192     04E9  3452               	retlw	82
   193     04EA  344D               	retlw	77
   194     04EB  3441               	retlw	65
   195     04EC  344C               	retlw	76
   196     04ED  3400               	retlw	0
   197                           
   198                           ;initializer for compare@F1044
   199     04EE  3442               	retlw	66
   200     04EF  3441               	retlw	65
   201     04F0  3454               	retlw	84
   202     04F1  3454               	retlw	84
   203     04F2  3420               	retlw	32
   204     04F3  3448               	retlw	72
   205     04F4  3449               	retlw	73
   206     04F5  3447               	retlw	71
   207     04F6  3448               	retlw	72
   208     04F7  3400               	retlw	0
   209                           
   210                           ;initializer for compare@F1038
   211     04F8  3442               	retlw	66
   212     04F9  3441               	retlw	65
   213     04FA  3454               	retlw	84
   214     04FB  3454               	retlw	84
   215     04FC  3420               	retlw	32
   216     04FD  344C               	retlw	76
   217     04FE  344F               	retlw	79
   218     04FF  3457               	retlw	87
   219     0500  3400               	retlw	0
   220                           
   221                           	psect	idataBANK1
   222     04C4                     __pidataBANK1:
   223                           
   224                           ;initializer for _arr
   225     04C4  3442               	retlw	66
   226     04C5  3441               	retlw	65
   227     04C6  3454               	retlw	84
   228     04C7  3454               	retlw	84
   229     04C8  3420               	retlw	32
   230     04C9  3456               	retlw	86
   231     04CA  344F               	retlw	79
   232     04CB  344C               	retlw	76
   233     04CC  3454               	retlw	84
   234     04CD  3400               	retlw	0
   235     04CE  3400               	retlw	0
   236     04CF  3400               	retlw	0
   237     04D0  3400               	retlw	0
   238     04D1  3400               	retlw	0
   239     04D2  3400               	retlw	0
   240     04D3  3400               	retlw	0
   241     04D4  3400               	retlw	0
   242     04D5  3400               	retlw	0
   243     04D6  3400               	retlw	0
   244     04D7  3400               	retlw	0
   245     04D8  3400               	retlw	0
   246     04D9  3400               	retlw	0
   247     04DA  3400               	retlw	0
   248     04DB  3400               	retlw	0
   249     04DC  3400               	retlw	0
   250     04DD  3400               	retlw	0
   251     04DE  3400               	retlw	0
   252     04DF  3400               	retlw	0
   253     04E0  3400               	retlw	0
   254     04E1  3400               	retlw	0
   255     0008                     _PORTD	set	8
   256     0007                     _PORTC	set	7
   257     0006                     _PORTB	set	6
   258     0081                     _OPTION_REG	set	129
   259     0088                     _TRISD	set	136
   260     0086                     _TRISB	set	134
   261     0087                     _TRISC	set	135
   262                           
   263                           	psect	cinit
   264     07D6                     start_initialization:	
   265                           ; #config settings
   266                           
   267     07D6                     __initialization:
   268                           
   269                           ; Initialize objects allocated to BANK1
   270     07D6  1383               	bcf	3,7	;select IRP bank0
   271     07D7  30BE               	movlw	low (__pdataBANK1+30)
   272     07D8  00FD               	movwf	btemp+-1
   273     07D9  3004               	movlw	high __pidataBANK1
   274     07DA  00FE               	movwf	btemp
   275     07DB  30C4               	movlw	low __pidataBANK1
   276     07DC  00FF               	movwf	btemp+1
   277     07DD  30A0               	movlw	low __pdataBANK1
   278     07DE  0084               	movwf	4
   279     07DF  120A  118A  2475  120A  118A  	fcall	init_ram0
   280                           
   281                           ; Initialize objects allocated to BANK0
   282     07E4  3065               	movlw	low (__pdataBANK0+31)
   283     07E5  00FD               	movwf	btemp+-1
   284     07E6  3004               	movlw	high __pidataBANK0
   285     07E7  00FE               	movwf	btemp
   286     07E8  30E2               	movlw	low __pidataBANK0
   287     07E9  00FF               	movwf	btemp+1
   288     07EA  3046               	movlw	low __pdataBANK0
   289     07EB  0084               	movwf	4
   290     07EC  120A  118A  2475  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293     07F1  01E5               	clrf	__pbssBANK0& (0+127)
   294     07F2  01E6               	clrf	(__pbssBANK0+1)& (0+127)
   295     07F3  01E7               	clrf	(__pbssBANK0+2)& (0+127)
   296     07F4  01E8               	clrf	(__pbssBANK0+3)& (0+127)
   297     07F5  01E9               	clrf	(__pbssBANK0+4)& (0+127)
   298     07F6  01EA               	clrf	(__pbssBANK0+5)& (0+127)
   299     07F7  01EB               	clrf	(__pbssBANK0+6)& (0+127)
   300     07F8  01EC               	clrf	(__pbssBANK0+7)& (0+127)
   301     07F9  01ED               	clrf	(__pbssBANK0+8)& (0+127)
   302     07FA  01EE               	clrf	(__pbssBANK0+9)& (0+127)
   303     07FB  01EF               	clrf	(__pbssBANK0+10)& (0+127)
   304     07FC                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307     07FC                     __end_of__initialization:
   308     07FC  0183               	clrf	3
   309     07FD  120A  118A  2C63   	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	bssBANK0
   312     0065                     __pbssBANK0:
   313     0065                     _i:
   314     0065                     	ds	2
   315     0067                     _j:
   316     0067                     	ds	2
   317     0069                     _value:
   318     0069                     	ds	1
   319     006A                     _n:
   320     006A                     	ds	1
   321     006B                     _m:
   322     006B                     	ds	1
   323     006C                     _x:
   324     006C                     	ds	1
   325     006D                     _d1:
   326     006D                     	ds	1
   327     006E                     _d2:
   328     006E                     	ds	1
   329     006F                     _d3:
   330     006F                     	ds	1
   331                           
   332                           	psect	dataBANK0
   333     0046                     __pdataBANK0:
   334     0046                     compare@F1041:
   335     0046                     	ds	12
   336     0052                     compare@F1044:
   337     0052                     	ds	10
   338     005C                     compare@F1038:
   339     005C                     	ds	9
   340                           
   341                           	psect	dataBANK1
   342     00A0                     __pdataBANK1:
   343     00A0                     _arr:
   344     00A0                     	ds	30
   345                           
   346                           	psect	inittext
   347     0471                     init_fetch0:	
   348                           ;	Called with low address in FSR and high address in W
   349                           
   350     0471  087E               	movf	btemp,w
   351     0472  008A               	movwf	10
   352     0473  087F               	movf	btemp+1,w
   353     0474  0082               	movwf	2
   354     0475                     init_ram0:	
   355                           ;Called with:
   356                           ;	high address of idata address in btemp 
   357                           ;	low address of idata address in btemp+1 
   358                           ;	low address of data in FSR
   359                           ;	high address + 1 of data in btemp-1
   360                           
   361     0475  120A  118A  2471  120A  118A  	fcall	init_fetch0
   362     047A  0080               	movwf	0
   363     047B  0A84               	incf	4,f
   364     047C  0804               	movf	4,w
   365     047D  067D               	xorwf	btemp+-1,w
   366     047E  1903               	btfsc	3,2
   367     047F  3400               	retlw	0
   368     0480  0AFF               	incf	btemp+1,f
   369     0481  1903               	btfsc	3,2
   370     0482  0AFE               	incf	btemp,f
   371     0483  2C75               	goto	init_ram0
   372                           
   373                           	psect	cstackCOMMON
   374     0070                     __pcstackCOMMON:
   375     0070                     ?_init:
   376     0070                     ?_keyscane:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ?_lcd_cmd:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     ??_lcd_cmd:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ?_lcd_data:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ??_lcd_data:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ?_main:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ?___bmul:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ?___wmul:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ___bmul@multiplicand:	
   401                           ; 2 bytes @ 0x0
   402                           
   403     0070                     ___wmul@multiplier:	
   404                           ; 1 bytes @ 0x0
   405                           
   406                           
   407                           ; 2 bytes @ 0x0
   408     0070                     	ds	1
   409     0071                     ??___bmul:
   410                           
   411                           ; 1 bytes @ 0x1
   412     0071                     	ds	1
   413     0072                     lcd_data@i:
   414     0072                     lcd_cmd@i:	
   415                           ; 1 bytes @ 0x2
   416                           
   417     0072                     ___bmul@product:	
   418                           ; 1 bytes @ 0x2
   419                           
   420     0072                     ___wmul@multiplicand:	
   421                           ; 1 bytes @ 0x2
   422                           
   423                           
   424                           ; 2 bytes @ 0x2
   425     0072                     	ds	1
   426     0073                     ??_init:
   427     0073                     ?_compare:	
   428                           ; 1 bytes @ 0x3
   429                           
   430     0073                     ___bmul@multiplier:	
   431                           ; 1 bytes @ 0x3
   432                           
   433     0073                     compare@i:	
   434                           ; 1 bytes @ 0x3
   435                           
   436                           
   437                           ; 2 bytes @ 0x3
   438     0073                     	ds	1
   439     0074                     ??___wmul:
   440     0074                     ___wmul@product:	
   441                           ; 1 bytes @ 0x4
   442                           
   443                           
   444                           ; 2 bytes @ 0x4
   445     0074                     	ds	1
   446     0075                     ??_compare:
   447                           
   448                           ; 1 bytes @ 0x5
   449     0075                     	ds	1
   450     0076                     ?___lwdiv:
   451     0076                     ___lwdiv@divisor:	
   452                           ; 2 bytes @ 0x6
   453                           
   454                           
   455                           ; 2 bytes @ 0x6
   456     0076                     	ds	2
   457     0078                     ___lwdiv@dividend:
   458                           
   459                           ; 2 bytes @ 0x8
   460     0078                     	ds	2
   461     007A                     ??___lwdiv:
   462                           
   463                           ; 1 bytes @ 0xA
   464     007A                     	ds	1
   465     007B                     ___lwdiv@quotient:
   466                           
   467                           ; 2 bytes @ 0xB
   468     007B                     	ds	2
   469     007D                     ___lwdiv@counter:
   470                           
   471                           ; 1 bytes @ 0xD
   472     007D                     	ds	1
   473     007E                     ??_main:
   474                           
   475                           	psect	cstackBANK0
   476     0020                     __pcstackBANK0:	
   477                           ; 1 bytes @ 0xE
   478                           
   479     0020                     ?_lcd_output:
   480     0020                     lcd_output@i:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0020                     compare@z_93:	
   484                           ; 2 bytes @ 0x0
   485                           
   486                           
   487                           ; 12 bytes @ 0x0
   488     0020                     	ds	2
   489     0022                     ??_lcd_output:
   490                           
   491                           ; 1 bytes @ 0x2
   492     0022                     	ds	10
   493     002C                     compare@z_96:
   494                           
   495                           ; 10 bytes @ 0xC
   496     002C                     	ds	10
   497     0036                     compare@z:
   498                           
   499                           ; 9 bytes @ 0x16
   500     0036                     	ds	9
   501     003F                     compare@l:
   502                           
   503                           ; 2 bytes @ 0x1F
   504     003F                     	ds	2
   505     0041                     compare@l_94:
   506                           
   507                           ; 2 bytes @ 0x21
   508     0041                     	ds	2
   509     0043                     compare@l_97:
   510                           
   511                           ; 2 bytes @ 0x23
   512     0043                     	ds	2
   513     0045                     ??_keyscane:
   514                           
   515                           ; 1 bytes @ 0x25
   516     0045                     	ds	1
   517                           
   518                           	psect	maintext
   519     0463                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 32 in file "CLASS4_TASK2.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B00/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels required when called: 3
   545 ;; This function calls:
   546 ;;		_init
   547 ;;		_keyscane
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0463                     _main:	
   554                           ;psect for function _main
   555                           
   556     0463                     l1112:	
   557                           ;incstack = 0
   558                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   559                           
   560                           
   561                           ;CLASS4_TASK2.c: 33:     init();
   562     0463  120A  118A  256A  120A  118A  	fcall	_init
   563     0468                     l1114:
   564                           
   565                           ;CLASS4_TASK2.c: 35:         keyscane();
   566     0468  120A  118A  2660  120A  118A  	fcall	_keyscane
   567     046D  2C68               	goto	l1114
   568     046E  120A  118A  2800   	ljmp	start
   569     0471                     __end_of_main:
   570                           
   571                           	psect	text1
   572     0660                     __ptext1:	
   573 ;; *************** function _keyscane *****************
   574 ;; Defined at:
   575 ;;		line 60 in file "CLASS4_TASK2.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          0       1       0       0       0
   592 ;;      Totals:         0       1       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 2
   596 ;; This function calls:
   597 ;;		_compare
   598 ;;		_lcd_cmd
   599 ;;		_lcd_data
   600 ;;		_lcd_output
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606     0660                     _keyscane:	
   607                           ;psect for function _keyscane
   608                           
   609     0660                     l1060:	
   610                           ;incstack = 0
   611                           ; Regs used in _keyscane: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   612                           
   613                           
   614                           ;CLASS4_TASK2.c: 62:     value=PORTB&0XF0;
   615     0660  1283               	bcf	3,5	;RP0=0, select bank0
   616     0661  1303               	bcf	3,6	;RP1=0, select bank0
   617     0662  0806               	movf	6,w	;volatile
   618     0663  39F0               	andlw	240
   619     0664  00E9               	movwf	_value
   620                           
   621                           ;CLASS4_TASK2.c: 63:     switch(value){
   622     0665  2EEC               	goto	l1110
   623     0666                     l1062:
   624                           
   625                           ;CLASS4_TASK2.c: 65:             lcd_cmd(0X80);
   626     0666  3080               	movlw	128
   627     0667  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   628     066C                     l1064:
   629                           
   630                           ;CLASS4_TASK2.c: 66:             for(x=0;x<9;x++){
   631     066C  1283               	bcf	3,5	;RP0=0, select bank0
   632     066D  1303               	bcf	3,6	;RP1=0, select bank0
   633     066E  01EC               	clrf	_x
   634     066F                     l1070:
   635                           
   636                           ;CLASS4_TASK2.c: 67:                 lcd_data(arr[x]);
   637     066F  086C               	movf	_x,w
   638     0670  3EA0               	addlw	(low (_arr| 0))& (0+255)
   639     0671  0084               	movwf	4
   640     0672  1383               	bcf	3,7	;select IRP bank1
   641     0673  0800               	movf	0,w
   642     0674  120A  118A  2484  120A  118A  	fcall	_lcd_data
   643     0679                     l1072:
   644                           
   645                           ;CLASS4_TASK2.c: 68:             }
   646     0679  3001               	movlw	1
   647     067A  1283               	bcf	3,5	;RP0=0, select bank0
   648     067B  1303               	bcf	3,6	;RP1=0, select bank0
   649     067C  00C5               	movwf	??_keyscane
   650     067D  0845               	movf	??_keyscane,w
   651     067E  07EC               	addwf	_x,f
   652     067F                     l1074:
   653     067F  3009               	movlw	9
   654     0680  026C               	subwf	_x,w
   655     0681  1C03               	skipc
   656     0682  2E84               	goto	u501
   657     0683  2E85               	goto	u500
   658     0684                     u501:
   659     0684  2E6F               	goto	l1070
   660     0685                     u500:
   661     0685                     l1076:
   662                           
   663                           ;CLASS4_TASK2.c: 69:             lcd_cmd(0X8A);
   664     0685  308A               	movlw	138
   665     0686  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   666                           
   667                           ;CLASS4_TASK2.c: 70:             lcd_output(j);
   668     068B  1283               	bcf	3,5	;RP0=0, select bank0
   669     068C  1303               	bcf	3,6	;RP1=0, select bank0
   670     068D  0868               	movf	_j+1,w
   671     068E  00A1               	movwf	lcd_output@i+1
   672     068F  0867               	movf	_j,w
   673     0690  00A0               	movwf	lcd_output@i
   674     0691  120A  118A  25D4  120A  118A  	fcall	_lcd_output
   675     0696                     l1078:
   676                           
   677                           ;CLASS4_TASK2.c: 71:             compare(j);
   678     0696  1283               	bcf	3,5	;RP0=0, select bank0
   679     0697  1303               	bcf	3,6	;RP1=0, select bank0
   680     0698  0868               	movf	_j+1,w
   681     0699  00F4               	movwf	compare@i+1
   682     069A  0867               	movf	_j,w
   683     069B  00F3               	movwf	compare@i
   684     069C  120A  118A  26FB  120A  118A  	fcall	_compare
   685                           
   686                           ;CLASS4_TASK2.c: 72:             break;
   687     06A1  2EFA               	goto	l72
   688     06A2                     l1080:
   689                           
   690                           ;CLASS4_TASK2.c: 74:             j++;
   691     06A2  3001               	movlw	1
   692     06A3  07E7               	addwf	_j,f
   693     06A4  1803               	skipnc
   694     06A5  0AE8               	incf	_j+1,f
   695     06A6  3000               	movlw	0
   696     06A7  07E8               	addwf	_j+1,f
   697                           
   698                           ;CLASS4_TASK2.c: 75:             if(j>225){
   699     06A8  3000               	movlw	0
   700     06A9  0268               	subwf	_j+1,w
   701     06AA  30E2               	movlw	226
   702     06AB  1903               	skipnz
   703     06AC  0267               	subwf	_j,w
   704     06AD  1C03               	skipc
   705     06AE  2EB0               	goto	u511
   706     06AF  2EB1               	goto	u510
   707     06B0                     u511:
   708     06B0  2EB5               	goto	l1084
   709     06B1                     u510:
   710     06B1                     l1082:
   711                           
   712                           ;CLASS4_TASK2.c: 76:                 j=225;
   713     06B1  30E1               	movlw	225
   714     06B2  00E7               	movwf	_j
   715     06B3  3000               	movlw	0
   716     06B4  00E8               	movwf	_j+1
   717     06B5                     l1084:
   718                           
   719                           ;CLASS4_TASK2.c: 78:             lcd_cmd(0X8A);
   720     06B5  308A               	movlw	138
   721     06B6  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   722     06BB                     l1086:
   723                           
   724                           ;CLASS4_TASK2.c: 79:             lcd_output(j);
   725     06BB  1283               	bcf	3,5	;RP0=0, select bank0
   726     06BC  1303               	bcf	3,6	;RP1=0, select bank0
   727     06BD  0868               	movf	_j+1,w
   728     06BE  00A1               	movwf	lcd_output@i+1
   729     06BF  0867               	movf	_j,w
   730     06C0  00A0               	movwf	lcd_output@i
   731     06C1  120A  118A  25D4  120A  118A  	fcall	_lcd_output
   732     06C6  2E96               	goto	l1078
   733     06C7                     l1090:
   734                           
   735                           ;CLASS4_TASK2.c: 83:             j--;
   736     06C7  3001               	movlw	1
   737     06C8  02E7               	subwf	_j,f
   738     06C9  3000               	movlw	0
   739     06CA  1C03               	skipc
   740     06CB  03E8               	decf	_j+1,f
   741     06CC  02E8               	subwf	_j+1,f
   742                           
   743                           ;CLASS4_TASK2.c: 84:             if(j<155){
   744     06CD  3000               	movlw	0
   745     06CE  0268               	subwf	_j+1,w
   746     06CF  309B               	movlw	155
   747     06D0  1903               	skipnz
   748     06D1  0267               	subwf	_j,w
   749     06D2  1803               	skipnc
   750     06D3  2ED5               	goto	u521
   751     06D4  2ED6               	goto	u520
   752     06D5                     u521:
   753     06D5  2EDA               	goto	l1094
   754     06D6                     u520:
   755     06D6                     l1092:
   756                           
   757                           ;CLASS4_TASK2.c: 85:                 j=155;
   758     06D6  309B               	movlw	155
   759     06D7  00E7               	movwf	_j
   760     06D8  3000               	movlw	0
   761     06D9  00E8               	movwf	_j+1
   762     06DA                     l1094:
   763                           
   764                           ;CLASS4_TASK2.c: 87:             lcd_cmd(0X8A);
   765     06DA  308A               	movlw	138
   766     06DB  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   767     06E0  2EBB               	goto	l1086
   768     06E1                     l1100:
   769                           
   770                           ;CLASS4_TASK2.c: 92:             j=175;
   771     06E1  30AF               	movlw	175
   772     06E2  00E7               	movwf	_j
   773     06E3  3000               	movlw	0
   774     06E4  00E8               	movwf	_j+1
   775     06E5                     l1102:
   776                           
   777                           ;CLASS4_TASK2.c: 93:             lcd_cmd(0X8A);
   778     06E5  308A               	movlw	138
   779     06E6  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   780     06EB  2EBB               	goto	l1086
   781     06EC                     l1110:
   782     06EC  0869               	movf	_value,w
   783                           
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 4, Range of values is 112 to 224
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte           13     7 (average)
   789                           ; jumptable            263     9 (fixed)
   790                           ;	Chosen strategy is simple_byte
   791     06ED  3A70               	xorlw	112	; case 112
   792     06EE  1903               	skipnz
   793     06EF  2EE1               	goto	l1100
   794     06F0  3AC0               	xorlw	192	; case 176
   795     06F1  1903               	skipnz
   796     06F2  2EC7               	goto	l1090
   797     06F3  3A60               	xorlw	96	; case 208
   798     06F4  1903               	skipnz
   799     06F5  2EA2               	goto	l1080
   800     06F6  3A30               	xorlw	48	; case 224
   801     06F7  1903               	skipnz
   802     06F8  2E66               	goto	l1062
   803     06F9  2EFA               	goto	l72
   804     06FA                     l72:
   805     06FA  0008               	return
   806     06FB                     __end_of_keyscane:
   807                           
   808                           	psect	text2
   809     05D4                     __ptext2:	
   810 ;; *************** function _lcd_output *****************
   811 ;; Defined at:
   812 ;;		line 100 in file "CLASS4_TASK2.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  i               2    0[BANK0 ] unsigned int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  dot             1    0        unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       2       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       2       0       0       0
   829 ;;      Totals:         0       4       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 1
   833 ;; This function calls:
   834 ;;		___bmul
   835 ;;		___lwdiv
   836 ;;		___wmul
   837 ;;		_lcd_cmd
   838 ;;		_lcd_data
   839 ;; This function is called by:
   840 ;;		_keyscane
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844     05D4                     _lcd_output:	
   845                           ;psect for function _lcd_output
   846                           
   847     05D4                     l952:	
   848                           ;incstack = 0
   849                           ; Regs used in _lcd_output: [wreg+status,2+status,0+pclath+cstack]
   850                           
   851                           
   852                           ;CLASS4_TASK2.c: 101:     d3=(unsigned char)(i/100);
   853     05D4  3064               	movlw	100
   854     05D5  00F6               	movwf	___lwdiv@divisor
   855     05D6  3000               	movlw	0
   856     05D7  00F7               	movwf	___lwdiv@divisor+1
   857     05D8  1283               	bcf	3,5	;RP0=0, select bank0
   858     05D9  1303               	bcf	3,6	;RP1=0, select bank0
   859     05DA  0821               	movf	lcd_output@i+1,w
   860     05DB  00F9               	movwf	___lwdiv@dividend+1
   861     05DC  0820               	movf	lcd_output@i,w
   862     05DD  00F8               	movwf	___lwdiv@dividend
   863     05DE  120A  118A  2526  120A  118A  	fcall	___lwdiv
   864     05E3  0876               	movf	?___lwdiv,w
   865     05E4  1283               	bcf	3,5	;RP0=0, select bank0
   866     05E5  1303               	bcf	3,6	;RP1=0, select bank0
   867     05E6  00EF               	movwf	_d3
   868                           
   869                           ;CLASS4_TASK2.c: 102:     d2=(unsigned char)((i-(d3*100))/10);
   870     05E7  300A               	movlw	10
   871     05E8  00F6               	movwf	___lwdiv@divisor
   872     05E9  3000               	movlw	0
   873     05EA  00F7               	movwf	___lwdiv@divisor+1
   874     05EB  086F               	movf	_d3,w
   875     05EC  00A2               	movwf	??_lcd_output
   876     05ED  01A3               	clrf	??_lcd_output+1
   877     05EE  0822               	movf	??_lcd_output,w
   878     05EF  00F0               	movwf	___wmul@multiplier
   879     05F0  0823               	movf	??_lcd_output+1,w
   880     05F1  00F1               	movwf	___wmul@multiplier+1
   881     05F2  309C               	movlw	156
   882     05F3  00F2               	movwf	___wmul@multiplicand
   883     05F4  30FF               	movlw	255
   884     05F5  00F3               	movwf	___wmul@multiplicand+1
   885     05F6  120A  118A  2501  120A  118A  	fcall	___wmul
   886     05FB  1283               	bcf	3,5	;RP0=0, select bank0
   887     05FC  1303               	bcf	3,6	;RP1=0, select bank0
   888     05FD  0820               	movf	lcd_output@i,w
   889     05FE  0770               	addwf	?___wmul,w
   890     05FF  00F8               	movwf	___lwdiv@dividend
   891     0600  0821               	movf	lcd_output@i+1,w
   892     0601  1803               	skipnc
   893     0602  0A21               	incf	lcd_output@i+1,w
   894     0603  0771               	addwf	?___wmul+1,w
   895     0604  00F9               	movwf	___lwdiv@dividend+1
   896     0605  120A  118A  2526  120A  118A  	fcall	___lwdiv
   897     060A  0876               	movf	?___lwdiv,w
   898     060B  1283               	bcf	3,5	;RP0=0, select bank0
   899     060C  1303               	bcf	3,6	;RP1=0, select bank0
   900     060D  00EE               	movwf	_d2
   901                           
   902                           ;CLASS4_TASK2.c: 103:     d1=(unsigned char)(i-(d3*100)-(d2*10));
   903     060E  309C               	movlw	156
   904     060F  00F0               	movwf	___bmul@multiplicand
   905     0610  086F               	movf	_d3,w
   906     0611  120A  118A  2498  120A  118A  	fcall	___bmul
   907     0616  1283               	bcf	3,5	;RP0=0, select bank0
   908     0617  1303               	bcf	3,6	;RP1=0, select bank0
   909     0618  00A2               	movwf	??_lcd_output
   910     0619  30F6               	movlw	246
   911     061A  00F0               	movwf	___bmul@multiplicand
   912     061B  086E               	movf	_d2,w
   913     061C  120A  118A  2498  120A  118A  	fcall	___bmul
   914     0621  1283               	bcf	3,5	;RP0=0, select bank0
   915     0622  1303               	bcf	3,6	;RP1=0, select bank0
   916     0623  0722               	addwf	??_lcd_output,w
   917     0624  0720               	addwf	lcd_output@i,w
   918     0625  00ED               	movwf	_d1
   919     0626                     l954:
   920     0626                     l956:
   921                           
   922                           ;CLASS4_TASK2.c: 106:     lcd_cmd(0X8A);
   923     0626  308A               	movlw	138
   924     0627  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   925     062C                     l958:
   926                           
   927                           ;CLASS4_TASK2.c: 107:     lcd_data(0X30+d3);
   928     062C  1283               	bcf	3,5	;RP0=0, select bank0
   929     062D  1303               	bcf	3,6	;RP1=0, select bank0
   930     062E  086F               	movf	_d3,w
   931     062F  3E30               	addlw	48
   932     0630  120A  118A  2484  120A  118A  	fcall	_lcd_data
   933     0635                     l960:
   934                           
   935                           ;CLASS4_TASK2.c: 108:     lcd_cmd(0X8B);
   936     0635  308B               	movlw	139
   937     0636  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   938     063B                     l962:
   939                           
   940                           ;CLASS4_TASK2.c: 109:     lcd_data(0X30+d2);
   941     063B  1283               	bcf	3,5	;RP0=0, select bank0
   942     063C  1303               	bcf	3,6	;RP1=0, select bank0
   943     063D  086E               	movf	_d2,w
   944     063E  3E30               	addlw	48
   945     063F  120A  118A  2484  120A  118A  	fcall	_lcd_data
   946     0644                     l964:
   947                           
   948                           ;CLASS4_TASK2.c: 110:     lcd_cmd(0X8C);
   949     0644  308C               	movlw	140
   950     0645  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   951     064A                     l966:
   952                           
   953                           ;CLASS4_TASK2.c: 111:     lcd_data(dot);
   954     064A  302E               	movlw	46
   955     064B  120A  118A  2484  120A  118A  	fcall	_lcd_data
   956     0650                     l968:
   957                           
   958                           ;CLASS4_TASK2.c: 112:     lcd_cmd(0X8D);
   959     0650  308D               	movlw	141
   960     0651  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
   961     0656                     l970:
   962                           
   963                           ;CLASS4_TASK2.c: 113:     lcd_data(0X30+d1);
   964     0656  1283               	bcf	3,5	;RP0=0, select bank0
   965     0657  1303               	bcf	3,6	;RP1=0, select bank0
   966     0658  086D               	movf	_d1,w
   967     0659  3E30               	addlw	48
   968     065A  120A  118A  2484  120A  118A  	fcall	_lcd_data
   969     065F                     l75:
   970     065F  0008               	return
   971     0660                     __end_of_lcd_output:
   972                           
   973                           	psect	text3
   974     0501                     __ptext3:	
   975 ;; *************** function ___wmul *****************
   976 ;; Defined at:
   977 ;;		line 15 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  multiplier      2    0[COMMON] unsigned int 
   980 ;;  multiplicand    2    2[COMMON] unsigned int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  product         2    4[COMMON] unsigned int 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2    0[COMMON] unsigned int 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         4       0       0       0       0
   993 ;;      Locals:         2       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         6       0       0       0       0
   996 ;;Total ram usage:        6 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_lcd_output
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     0501                     ___wmul:	
  1006                           ;psect for function ___wmul
  1007                           
  1008     0501                     l898:	
  1009                           ;incstack = 0
  1010                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1011                           
  1012     0501  01F4               	clrf	___wmul@product
  1013     0502  01F5               	clrf	___wmul@product+1
  1014     0503                     l900:
  1015     0503  1C70               	btfss	___wmul@multiplier,0
  1016     0504  2D06               	goto	u271
  1017     0505  2D07               	goto	u270
  1018     0506                     u271:
  1019     0506  2D0D               	goto	l186
  1020     0507                     u270:
  1021     0507                     l902:
  1022     0507  0872               	movf	___wmul@multiplicand,w
  1023     0508  07F4               	addwf	___wmul@product,f
  1024     0509  1803               	skipnc
  1025     050A  0AF5               	incf	___wmul@product+1,f
  1026     050B  0873               	movf	___wmul@multiplicand+1,w
  1027     050C  07F5               	addwf	___wmul@product+1,f
  1028     050D                     l186:
  1029     050D  3001               	movlw	1
  1030     050E                     u285:
  1031     050E  1003               	clrc
  1032     050F  0DF2               	rlf	___wmul@multiplicand,f
  1033     0510  0DF3               	rlf	___wmul@multiplicand+1,f
  1034     0511  3EFF               	addlw	-1
  1035     0512  1D03               	skipz
  1036     0513  2D0E               	goto	u285
  1037     0514                     l904:
  1038     0514  3001               	movlw	1
  1039     0515                     u295:
  1040     0515  1003               	clrc
  1041     0516  0CF1               	rrf	___wmul@multiplier+1,f
  1042     0517  0CF0               	rrf	___wmul@multiplier,f
  1043     0518  3EFF               	addlw	-1
  1044     0519  1D03               	skipz
  1045     051A  2D15               	goto	u295
  1046     051B                     l906:
  1047     051B  0870               	movf	___wmul@multiplier,w
  1048     051C  0471               	iorwf	___wmul@multiplier+1,w
  1049     051D  1D03               	btfss	3,2
  1050     051E  2D20               	goto	u301
  1051     051F  2D21               	goto	u300
  1052     0520                     u301:
  1053     0520  2D03               	goto	l900
  1054     0521                     u300:
  1055     0521                     l908:
  1056     0521  0875               	movf	___wmul@product+1,w
  1057     0522  00F1               	movwf	?___wmul+1
  1058     0523  0874               	movf	___wmul@product,w
  1059     0524  00F0               	movwf	?___wmul
  1060     0525                     l188:
  1061     0525  0008               	return
  1062     0526                     __end_of___wmul:
  1063                           
  1064                           	psect	text4
  1065     0526                     __ptext4:	
  1066 ;; *************** function ___lwdiv *****************
  1067 ;; Defined at:
  1068 ;;		line 5 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/lwdiv.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  divisor         2    6[COMMON] unsigned int 
  1071 ;;  dividend        2    8[COMMON] unsigned int 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  quotient        2   11[COMMON] unsigned int 
  1074 ;;  counter         1   13[COMMON] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  2    6[COMMON] unsigned int 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         4       0       0       0       0
  1085 ;;      Locals:         3       0       0       0       0
  1086 ;;      Temps:          1       0       0       0       0
  1087 ;;      Totals:         8       0       0       0       0
  1088 ;;Total ram usage:        8 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_lcd_output
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097     0526                     ___lwdiv:	
  1098                           ;psect for function ___lwdiv
  1099                           
  1100     0526                     l926:	
  1101                           ;incstack = 0
  1102                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1103                           
  1104     0526  01FB               	clrf	___lwdiv@quotient
  1105     0527  01FC               	clrf	___lwdiv@quotient+1
  1106     0528                     l928:
  1107     0528  0876               	movf	___lwdiv@divisor,w
  1108     0529  0477               	iorwf	___lwdiv@divisor+1,w
  1109     052A  1903               	btfsc	3,2
  1110     052B  2D2D               	goto	u331
  1111     052C  2D2E               	goto	u330
  1112     052D                     u331:
  1113     052D  2D65               	goto	l948
  1114     052E                     u330:
  1115     052E                     l930:
  1116     052E  01FD               	clrf	___lwdiv@counter
  1117     052F  0AFD               	incf	___lwdiv@counter,f
  1118     0530  2D3C               	goto	l936
  1119     0531                     l932:
  1120     0531  3001               	movlw	1
  1121     0532                     u345:
  1122     0532  1003               	clrc
  1123     0533  0DF6               	rlf	___lwdiv@divisor,f
  1124     0534  0DF7               	rlf	___lwdiv@divisor+1,f
  1125     0535  3EFF               	addlw	-1
  1126     0536  1D03               	skipz
  1127     0537  2D32               	goto	u345
  1128     0538                     l934:
  1129     0538  3001               	movlw	1
  1130     0539  00FA               	movwf	??___lwdiv
  1131     053A  087A               	movf	??___lwdiv,w
  1132     053B  07FD               	addwf	___lwdiv@counter,f
  1133     053C                     l936:
  1134     053C  1FF7               	btfss	___lwdiv@divisor+1,7
  1135     053D  2D3F               	goto	u351
  1136     053E  2D40               	goto	u350
  1137     053F                     u351:
  1138     053F  2D31               	goto	l932
  1139     0540                     u350:
  1140     0540                     l938:
  1141     0540  3001               	movlw	1
  1142     0541                     u365:
  1143     0541  1003               	clrc
  1144     0542  0DFB               	rlf	___lwdiv@quotient,f
  1145     0543  0DFC               	rlf	___lwdiv@quotient+1,f
  1146     0544  3EFF               	addlw	-1
  1147     0545  1D03               	skipz
  1148     0546  2D41               	goto	u365
  1149     0547  0877               	movf	___lwdiv@divisor+1,w
  1150     0548  0279               	subwf	___lwdiv@dividend+1,w
  1151     0549  1D03               	skipz
  1152     054A  2D4D               	goto	u375
  1153     054B  0876               	movf	___lwdiv@divisor,w
  1154     054C  0278               	subwf	___lwdiv@dividend,w
  1155     054D                     u375:
  1156     054D  1C03               	skipc
  1157     054E  2D50               	goto	u371
  1158     054F  2D51               	goto	u370
  1159     0550                     u371:
  1160     0550  2D58               	goto	l944
  1161     0551                     u370:
  1162     0551                     l940:
  1163     0551  0876               	movf	___lwdiv@divisor,w
  1164     0552  02F8               	subwf	___lwdiv@dividend,f
  1165     0553  0877               	movf	___lwdiv@divisor+1,w
  1166     0554  1C03               	skipc
  1167     0555  03F9               	decf	___lwdiv@dividend+1,f
  1168     0556  02F9               	subwf	___lwdiv@dividend+1,f
  1169     0557                     l942:
  1170     0557  147B               	bsf	___lwdiv@quotient,0
  1171     0558                     l944:
  1172     0558  3001               	movlw	1
  1173     0559                     u385:
  1174     0559  1003               	clrc
  1175     055A  0CF7               	rrf	___lwdiv@divisor+1,f
  1176     055B  0CF6               	rrf	___lwdiv@divisor,f
  1177     055C  3EFF               	addlw	-1
  1178     055D  1D03               	skipz
  1179     055E  2D59               	goto	u385
  1180     055F                     l946:
  1181     055F  3001               	movlw	1
  1182     0560  02FD               	subwf	___lwdiv@counter,f
  1183     0561  1D03               	btfss	3,2
  1184     0562  2D64               	goto	u391
  1185     0563  2D65               	goto	u390
  1186     0564                     u391:
  1187     0564  2D40               	goto	l938
  1188     0565                     u390:
  1189     0565                     l948:
  1190     0565  087C               	movf	___lwdiv@quotient+1,w
  1191     0566  00F7               	movwf	?___lwdiv+1
  1192     0567  087B               	movf	___lwdiv@quotient,w
  1193     0568  00F6               	movwf	?___lwdiv
  1194     0569                     l466:
  1195     0569  0008               	return
  1196     056A                     __end_of___lwdiv:
  1197                           
  1198                           	psect	text5
  1199     0498                     __ptext5:	
  1200 ;; *************** function ___bmul *****************
  1201 ;; Defined at:
  1202 ;;		line 4 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul8.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  multiplier      1    wreg     unsigned char 
  1205 ;;  multiplicand    1    0[COMMON] unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  multiplier      1    3[COMMON] unsigned char 
  1208 ;;  product         1    2[COMMON] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      unsigned char 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         1       0       0       0       0
  1219 ;;      Locals:         2       0       0       0       0
  1220 ;;      Temps:          1       0       0       0       0
  1221 ;;      Totals:         4       0       0       0       0
  1222 ;;Total ram usage:        4 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_lcd_output
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231     0498                     ___bmul:	
  1232                           ;psect for function ___bmul
  1233                           
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1237                           ;___bmul@multiplier stored from wreg
  1238     0498  00F3               	movwf	___bmul@multiplier
  1239     0499                     l912:
  1240     0499  01F2               	clrf	___bmul@product
  1241     049A                     l914:
  1242     049A  1C73               	btfss	___bmul@multiplier,0
  1243     049B  2C9D               	goto	u311
  1244     049C  2C9E               	goto	u310
  1245     049D                     u311:
  1246     049D  2CA2               	goto	l918
  1247     049E                     u310:
  1248     049E                     l916:
  1249     049E  0870               	movf	___bmul@multiplicand,w
  1250     049F  00F1               	movwf	??___bmul
  1251     04A0  0871               	movf	??___bmul,w
  1252     04A1  07F2               	addwf	___bmul@product,f
  1253     04A2                     l918:
  1254     04A2  1003               	clrc
  1255     04A3  0DF0               	rlf	___bmul@multiplicand,f
  1256     04A4                     l920:
  1257     04A4  1003               	clrc
  1258     04A5  0CF3               	rrf	___bmul@multiplier,f
  1259     04A6  0873               	movf	___bmul@multiplier,w
  1260     04A7  1D03               	btfss	3,2
  1261     04A8  2CAA               	goto	u321
  1262     04A9  2CAB               	goto	u320
  1263     04AA                     u321:
  1264     04AA  2C9A               	goto	l914
  1265     04AB                     u320:
  1266     04AB                     l922:
  1267     04AB  0872               	movf	___bmul@product,w
  1268     04AC                     l212:
  1269     04AC  0008               	return
  1270     04AD                     __end_of___bmul:
  1271                           
  1272                           	psect	text6
  1273     06FB                     __ptext6:	
  1274 ;; *************** function _compare *****************
  1275 ;; Defined at:
  1276 ;;		line 133 in file "CLASS4_TASK2.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  i               2    3[COMMON] unsigned int 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  l               2   35[BANK0 ] int 
  1281 ;;  l               2   33[BANK0 ] int 
  1282 ;;  l               2   31[BANK0 ] int 
  1283 ;;  z              10   12[BANK0 ] unsigned char [10]
  1284 ;;  z              12    0[BANK0 ] unsigned char [12]
  1285 ;;  z               9   22[BANK0 ] unsigned char [9]
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         2       0       0       0       0
  1296 ;;      Locals:         0      37       0       0       0
  1297 ;;      Temps:          4       0       0       0       0
  1298 ;;      Totals:         6      37       0       0       0
  1299 ;;Total ram usage:       43 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 1
  1302 ;; This function calls:
  1303 ;;		_lcd_cmd
  1304 ;;		_lcd_data
  1305 ;; This function is called by:
  1306 ;;		_keyscane
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310     06FB                     _compare:	
  1311                           ;psect for function _compare
  1312                           
  1313     06FB                     l972:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _compare: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1316                           
  1317                           
  1318                           ;CLASS4_TASK2.c: 134:     lcd_cmd(0XC0);
  1319     06FB  30C0               	movlw	192
  1320     06FC  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1321     0701                     l974:
  1322                           
  1323                           ;CLASS4_TASK2.c: 135:     if(i>=155 && i<=175){
  1324     0701  3000               	movlw	0
  1325     0702  0274               	subwf	compare@i+1,w
  1326     0703  309B               	movlw	155
  1327     0704  1903               	skipnz
  1328     0705  0273               	subwf	compare@i,w
  1329     0706  1C03               	skipc
  1330     0707  2F09               	goto	u401
  1331     0708  2F0A               	goto	u400
  1332     0709                     u401:
  1333     0709  2F4E               	goto	l992
  1334     070A                     u400:
  1335     070A                     l976:
  1336     070A  3000               	movlw	0
  1337     070B  0274               	subwf	compare@i+1,w
  1338     070C  30B0               	movlw	176
  1339     070D  1903               	skipnz
  1340     070E  0273               	subwf	compare@i,w
  1341     070F  1803               	skipnc
  1342     0710  2F12               	goto	u411
  1343     0711  2F13               	goto	u410
  1344     0712                     u411:
  1345     0712  2F4E               	goto	l992
  1346     0713                     u410:
  1347     0713                     l978:
  1348                           
  1349                           ;CLASS4_TASK2.c: 136:         unsigned char z[]={"BATT LOW"};
  1350     0713  3036               	movlw	compare@z& (0+255)
  1351     0714  0084               	movwf	4
  1352     0715  305C               	movlw	low compare@F1038
  1353     0716  00F5               	movwf	??_compare
  1354     0717  0804               	movf	4,w
  1355     0718  00F6               	movwf	??_compare+1
  1356     0719  3009               	movlw	9
  1357     071A  00F7               	movwf	??_compare+2
  1358     071B                     u420:
  1359     071B  0875               	movf	??_compare,w
  1360     071C  0084               	movwf	4
  1361     071D  1383               	bcf	3,7	;select IRP bank0
  1362     071E  0800               	movf	0,w
  1363     071F  00F8               	movwf	??_compare+3
  1364     0720  0AF5               	incf	??_compare,f
  1365     0721  0876               	movf	??_compare+1,w
  1366     0722  0084               	movwf	4
  1367     0723  0878               	movf	??_compare+3,w
  1368     0724  0080               	movwf	0
  1369     0725  0AF6               	incf	??_compare+1,f
  1370     0726  0BF7               	decfsz	??_compare+2,f
  1371     0727  2F1B               	goto	u420
  1372     0728                     l980:
  1373                           
  1374                           ;CLASS4_TASK2.c: 137:         for(int l=0;l<8;l++){
  1375     0728  1283               	bcf	3,5	;RP0=0, select bank0
  1376     0729  1303               	bcf	3,6	;RP1=0, select bank0
  1377     072A  01BF               	clrf	compare@l
  1378     072B  01C0               	clrf	compare@l+1
  1379     072C                     l986:
  1380                           
  1381                           ;CLASS4_TASK2.c: 138:             lcd_data(z[l]);
  1382     072C  1283               	bcf	3,5	;RP0=0, select bank0
  1383     072D  1303               	bcf	3,6	;RP1=0, select bank0
  1384     072E  083F               	movf	compare@l,w
  1385     072F  3E36               	addlw	(low (compare@z| 0))& (0+255)
  1386     0730  0084               	movwf	4
  1387     0731  1383               	bcf	3,7	;select IRP bank0
  1388     0732  0800               	movf	0,w
  1389     0733  120A  118A  2484  120A  118A  	fcall	_lcd_data
  1390     0738                     l988:
  1391                           
  1392                           ;CLASS4_TASK2.c: 139:         }
  1393     0738  3001               	movlw	1
  1394     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1395     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1396     073B  07BF               	addwf	compare@l,f
  1397     073C  1803               	skipnc
  1398     073D  0AC0               	incf	compare@l+1,f
  1399     073E  3000               	movlw	0
  1400     073F  07C0               	addwf	compare@l+1,f
  1401     0740                     l990:
  1402     0740  0840               	movf	compare@l+1,w
  1403     0741  3A80               	xorlw	128
  1404     0742  00FF               	movwf	btemp+1
  1405     0743  3080               	movlw	128
  1406     0744  027F               	subwf	btemp+1,w
  1407     0745  1D03               	skipz
  1408     0746  2F49               	goto	u435
  1409     0747  3008               	movlw	8
  1410     0748  023F               	subwf	compare@l,w
  1411     0749                     u435:
  1412     0749  1C03               	skipc
  1413     074A  2F4C               	goto	u431
  1414     074B  2F4D               	goto	u430
  1415     074C                     u431:
  1416     074C  2F2C               	goto	l986
  1417     074D                     u430:
  1418     074D  2FD5               	goto	l100
  1419     074E                     l992:
  1420     074E  3000               	movlw	0
  1421     074F  0274               	subwf	compare@i+1,w
  1422     0750  30B0               	movlw	176
  1423     0751  1903               	skipnz
  1424     0752  0273               	subwf	compare@i,w
  1425     0753  1C03               	skipc
  1426     0754  2F56               	goto	u441
  1427     0755  2F57               	goto	u440
  1428     0756                     u441:
  1429     0756  2F9B               	goto	l1010
  1430     0757                     u440:
  1431     0757                     l994:
  1432     0757  3000               	movlw	0
  1433     0758  0274               	subwf	compare@i+1,w
  1434     0759  30CE               	movlw	206
  1435     075A  1903               	skipnz
  1436     075B  0273               	subwf	compare@i,w
  1437     075C  1803               	skipnc
  1438     075D  2F5F               	goto	u451
  1439     075E  2F60               	goto	u450
  1440     075F                     u451:
  1441     075F  2F9B               	goto	l1010
  1442     0760                     u450:
  1443     0760                     l996:
  1444                           
  1445                           ;CLASS4_TASK2.c: 142:        unsigned char z[]={"BATT NORMAL"};
  1446     0760  3020               	movlw	compare@z_93& (0+255)
  1447     0761  0084               	movwf	4
  1448     0762  3046               	movlw	low compare@F1041
  1449     0763  00F5               	movwf	??_compare
  1450     0764  0804               	movf	4,w
  1451     0765  00F6               	movwf	??_compare+1
  1452     0766  300C               	movlw	12
  1453     0767  00F7               	movwf	??_compare+2
  1454     0768                     u460:
  1455     0768  0875               	movf	??_compare,w
  1456     0769  0084               	movwf	4
  1457     076A  1383               	bcf	3,7	;select IRP bank0
  1458     076B  0800               	movf	0,w
  1459     076C  00F8               	movwf	??_compare+3
  1460     076D  0AF5               	incf	??_compare,f
  1461     076E  0876               	movf	??_compare+1,w
  1462     076F  0084               	movwf	4
  1463     0770  0878               	movf	??_compare+3,w
  1464     0771  0080               	movwf	0
  1465     0772  0AF6               	incf	??_compare+1,f
  1466     0773  0BF7               	decfsz	??_compare+2,f
  1467     0774  2F68               	goto	u460
  1468     0775                     l998:
  1469                           
  1470                           ;CLASS4_TASK2.c: 143:        for(int l=0;l<11;l++){
  1471     0775  1283               	bcf	3,5	;RP0=0, select bank0
  1472     0776  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0777  01C1               	clrf	compare@l_94
  1474     0778  01C2               	clrf	compare@l_94+1
  1475     0779                     l1004:
  1476                           
  1477                           ;CLASS4_TASK2.c: 144:            lcd_data(z[l]);
  1478     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1479     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1480     077B  0841               	movf	compare@l_94,w
  1481     077C  3E20               	addlw	(low (compare@z_93| 0))& (0+255)
  1482     077D  0084               	movwf	4
  1483     077E  1383               	bcf	3,7	;select IRP bank0
  1484     077F  0800               	movf	0,w
  1485     0780  120A  118A  2484  120A  118A  	fcall	_lcd_data
  1486     0785                     l1006:
  1487                           
  1488                           ;CLASS4_TASK2.c: 145:        }
  1489     0785  3001               	movlw	1
  1490     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1491     0787  1303               	bcf	3,6	;RP1=0, select bank0
  1492     0788  07C1               	addwf	compare@l_94,f
  1493     0789  1803               	skipnc
  1494     078A  0AC2               	incf	compare@l_94+1,f
  1495     078B  3000               	movlw	0
  1496     078C  07C2               	addwf	compare@l_94+1,f
  1497     078D                     l1008:
  1498     078D  0842               	movf	compare@l_94+1,w
  1499     078E  3A80               	xorlw	128
  1500     078F  00FF               	movwf	btemp+1
  1501     0790  3080               	movlw	128
  1502     0791  027F               	subwf	btemp+1,w
  1503     0792  1D03               	skipz
  1504     0793  2F96               	goto	u475
  1505     0794  300B               	movlw	11
  1506     0795  0241               	subwf	compare@l_94,w
  1507     0796                     u475:
  1508     0796  1C03               	skipc
  1509     0797  2F99               	goto	u471
  1510     0798  2F9A               	goto	u470
  1511     0799                     u471:
  1512     0799  2F79               	goto	l1004
  1513     079A                     u470:
  1514     079A  2FD5               	goto	l100
  1515     079B                     l1010:
  1516                           
  1517                           ;CLASS4_TASK2.c: 147:        unsigned char z[]={"BATT HIGH"};
  1518     079B  302C               	movlw	compare@z_96& (0+255)
  1519     079C  0084               	movwf	4
  1520     079D  3052               	movlw	low compare@F1044
  1521     079E  00F5               	movwf	??_compare
  1522     079F  0804               	movf	4,w
  1523     07A0  00F6               	movwf	??_compare+1
  1524     07A1  300A               	movlw	10
  1525     07A2  00F7               	movwf	??_compare+2
  1526     07A3                     u480:
  1527     07A3  0875               	movf	??_compare,w
  1528     07A4  0084               	movwf	4
  1529     07A5  1383               	bcf	3,7	;select IRP bank0
  1530     07A6  0800               	movf	0,w
  1531     07A7  00F8               	movwf	??_compare+3
  1532     07A8  0AF5               	incf	??_compare,f
  1533     07A9  0876               	movf	??_compare+1,w
  1534     07AA  0084               	movwf	4
  1535     07AB  0878               	movf	??_compare+3,w
  1536     07AC  0080               	movwf	0
  1537     07AD  0AF6               	incf	??_compare+1,f
  1538     07AE  0BF7               	decfsz	??_compare+2,f
  1539     07AF  2FA3               	goto	u480
  1540     07B0                     l1012:
  1541                           
  1542                           ;CLASS4_TASK2.c: 148:        for(int l=0;l<9;l++){
  1543     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1544     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1545     07B2  01C3               	clrf	compare@l_97
  1546     07B3  01C4               	clrf	compare@l_97+1
  1547     07B4                     l1018:
  1548                           
  1549                           ;CLASS4_TASK2.c: 149:            lcd_data(z[l]);
  1550     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1551     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1552     07B6  0843               	movf	compare@l_97,w
  1553     07B7  3E2C               	addlw	(low (compare@z_96| 0))& (0+255)
  1554     07B8  0084               	movwf	4
  1555     07B9  1383               	bcf	3,7	;select IRP bank0
  1556     07BA  0800               	movf	0,w
  1557     07BB  120A  118A  2484  120A  118A  	fcall	_lcd_data
  1558     07C0                     l1020:
  1559                           
  1560                           ;CLASS4_TASK2.c: 150:        }
  1561     07C0  3001               	movlw	1
  1562     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1563     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1564     07C3  07C3               	addwf	compare@l_97,f
  1565     07C4  1803               	skipnc
  1566     07C5  0AC4               	incf	compare@l_97+1,f
  1567     07C6  3000               	movlw	0
  1568     07C7  07C4               	addwf	compare@l_97+1,f
  1569     07C8                     l1022:
  1570     07C8  0844               	movf	compare@l_97+1,w
  1571     07C9  3A80               	xorlw	128
  1572     07CA  00FF               	movwf	btemp+1
  1573     07CB  3080               	movlw	128
  1574     07CC  027F               	subwf	btemp+1,w
  1575     07CD  1D03               	skipz
  1576     07CE  2FD1               	goto	u495
  1577     07CF  3009               	movlw	9
  1578     07D0  0243               	subwf	compare@l_97,w
  1579     07D1                     u495:
  1580     07D1  1C03               	skipc
  1581     07D2  2FD4               	goto	u491
  1582     07D3  2FD5               	goto	u490
  1583     07D4                     u491:
  1584     07D4  2FB4               	goto	l1018
  1585     07D5                     u490:
  1586     07D5                     l100:
  1587     07D5  0008               	return
  1588     07D6                     __end_of_compare:
  1589                           
  1590                           	psect	text7
  1591     0484                     __ptext7:	
  1592 ;; *************** function _lcd_data *****************
  1593 ;; Defined at:
  1594 ;;		line 117 in file "CLASS4_TASK2.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  i               1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  i               1    2[COMMON] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0
  1610 ;;      Temps:          2       0       0       0       0
  1611 ;;      Totals:         3       0       0       0       0
  1612 ;;Total ram usage:        3 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_keyscane
  1618 ;;		_lcd_output
  1619 ;;		_compare
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623     0484                     _lcd_data:	
  1624                           ;psect for function _lcd_data
  1625                           
  1626                           
  1627                           ;incstack = 0
  1628                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  1629                           ;lcd_data@i stored from wreg
  1630     0484  00F2               	movwf	lcd_data@i
  1631     0485                     l888:
  1632                           
  1633                           ;CLASS4_TASK2.c: 118:     PORTC|=0x08;
  1634     0485  1283               	bcf	3,5	;RP0=0, select bank0
  1635     0486  1303               	bcf	3,6	;RP1=0, select bank0
  1636     0487  1587               	bsf	7,3	;volatile
  1637     0488                     l890:
  1638                           
  1639                           ;CLASS4_TASK2.c: 119:     PORTD=i;
  1640     0488  0872               	movf	lcd_data@i,w
  1641     0489  0088               	movwf	8	;volatile
  1642     048A                     l892:
  1643                           
  1644                           ;CLASS4_TASK2.c: 120:     PORTC|=0X01;
  1645     048A  1407               	bsf	7,0	;volatile
  1646     048B                     l894:
  1647                           
  1648                           ;CLASS4_TASK2.c: 121:     PORTC&=~0X01;
  1649     048B  30FE               	movlw	254
  1650     048C  00F0               	movwf	??_lcd_data
  1651     048D  0870               	movf	??_lcd_data,w
  1652     048E  0587               	andwf	7,f	;volatile
  1653     048F                     l896:
  1654                           
  1655                           ;CLASS4_TASK2.c: 122:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1656     048F  30C3               	movlw	195
  1657     0490  00F1               	movwf	??_lcd_data+1
  1658     0491  30CD               	movlw	205
  1659     0492  00F0               	movwf	??_lcd_data
  1660     0493                     u537:
  1661     0493  0BF0               	decfsz	??_lcd_data,f
  1662     0494  2C93               	goto	u537
  1663     0495  0BF1               	decfsz	??_lcd_data+1,f
  1664     0496  2C93               	goto	u537
  1665     0497                     l78:
  1666     0497  0008               	return
  1667     0498                     __end_of_lcd_data:
  1668                           
  1669                           	psect	text8
  1670     056A                     __ptext8:	
  1671 ;; *************** function _init *****************
  1672 ;; Defined at:
  1673 ;;		line 39 in file "CLASS4_TASK2.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          2       0       0       0       0
  1690 ;;      Totals:         2       0       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 1
  1694 ;; This function calls:
  1695 ;;		_lcd_cmd
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     056A                     _init:	
  1702                           ;psect for function _init
  1703                           
  1704     056A                     l1024:	
  1705                           ;incstack = 0
  1706                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1707                           
  1708                           
  1709                           ;CLASS4_TASK2.c: 40:     TRISC=0X00;
  1710     056A  1683               	bsf	3,5	;RP0=1, select bank1
  1711     056B  1303               	bcf	3,6	;RP1=0, select bank1
  1712     056C  0187               	clrf	7	;volatile
  1713     056D                     l1026:
  1714                           
  1715                           ;CLASS4_TASK2.c: 41:     TRISB=0XF0;
  1716     056D  30F0               	movlw	240
  1717     056E  0086               	movwf	6	;volatile
  1718     056F                     l1028:
  1719                           
  1720                           ;CLASS4_TASK2.c: 42:     TRISD=0X00;
  1721     056F  0188               	clrf	8	;volatile
  1722     0570                     l1030:
  1723                           
  1724                           ;CLASS4_TASK2.c: 43:     PORTB=0X00;
  1725     0570  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0571  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0572  0186               	clrf	6	;volatile
  1728     0573                     l1032:
  1729                           
  1730                           ;CLASS4_TASK2.c: 44:     OPTION_REG&=0x7F;
  1731     0573  307F               	movlw	127
  1732     0574  00F3               	movwf	??_init
  1733     0575  0873               	movf	??_init,w
  1734     0576  1683               	bsf	3,5	;RP0=1, select bank1
  1735     0577  1303               	bcf	3,6	;RP1=0, select bank1
  1736     0578  0581               	andwf	1,f	;volatile
  1737     0579                     l1034:
  1738                           
  1739                           ;CLASS4_TASK2.c: 45:     lcd_cmd(0X38);
  1740     0579  3038               	movlw	56
  1741     057A  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1742     057F                     l1036:
  1743                           
  1744                           ;CLASS4_TASK2.c: 46:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1745     057F  30C3               	movlw	195
  1746     0580  00F4               	movwf	??_init+1
  1747     0581  30CD               	movlw	205
  1748     0582  00F3               	movwf	??_init
  1749     0583                     u547:
  1750     0583  0BF3               	decfsz	??_init,f
  1751     0584  2D83               	goto	u547
  1752     0585  0BF4               	decfsz	??_init+1,f
  1753     0586  2D83               	goto	u547
  1754     0587                     l1038:
  1755                           
  1756                           ;CLASS4_TASK2.c: 47:     lcd_cmd(0X38);
  1757     0587  3038               	movlw	56
  1758     0588  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1759     058D                     l1040:
  1760                           
  1761                           ;CLASS4_TASK2.c: 48:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1762     058D  30C3               	movlw	195
  1763     058E  00F4               	movwf	??_init+1
  1764     058F  30CD               	movlw	205
  1765     0590  00F3               	movwf	??_init
  1766     0591                     u557:
  1767     0591  0BF3               	decfsz	??_init,f
  1768     0592  2D91               	goto	u557
  1769     0593  0BF4               	decfsz	??_init+1,f
  1770     0594  2D91               	goto	u557
  1771     0595                     l1042:
  1772                           
  1773                           ;CLASS4_TASK2.c: 49:     lcd_cmd(0X38);
  1774     0595  3038               	movlw	56
  1775     0596  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1776     059B                     l1044:
  1777                           
  1778                           ;CLASS4_TASK2.c: 50:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1779     059B  30C3               	movlw	195
  1780     059C  00F4               	movwf	??_init+1
  1781     059D  30CD               	movlw	205
  1782     059E  00F3               	movwf	??_init
  1783     059F                     u567:
  1784     059F  0BF3               	decfsz	??_init,f
  1785     05A0  2D9F               	goto	u567
  1786     05A1  0BF4               	decfsz	??_init+1,f
  1787     05A2  2D9F               	goto	u567
  1788     05A3                     l1046:
  1789                           
  1790                           ;CLASS4_TASK2.c: 51:     lcd_cmd(0X06);
  1791     05A3  3006               	movlw	6
  1792     05A4  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1793     05A9                     l1048:
  1794                           
  1795                           ;CLASS4_TASK2.c: 52:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1796     05A9  30C3               	movlw	195
  1797     05AA  00F4               	movwf	??_init+1
  1798     05AB  30CD               	movlw	205
  1799     05AC  00F3               	movwf	??_init
  1800     05AD                     u577:
  1801     05AD  0BF3               	decfsz	??_init,f
  1802     05AE  2DAD               	goto	u577
  1803     05AF  0BF4               	decfsz	??_init+1,f
  1804     05B0  2DAD               	goto	u577
  1805     05B1                     l1050:
  1806                           
  1807                           ;CLASS4_TASK2.c: 53:     lcd_cmd(0X0C);
  1808     05B1  300C               	movlw	12
  1809     05B2  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1810     05B7                     l1052:
  1811                           
  1812                           ;CLASS4_TASK2.c: 54:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1813     05B7  30C3               	movlw	195
  1814     05B8  00F4               	movwf	??_init+1
  1815     05B9  30CD               	movlw	205
  1816     05BA  00F3               	movwf	??_init
  1817     05BB                     u587:
  1818     05BB  0BF3               	decfsz	??_init,f
  1819     05BC  2DBB               	goto	u587
  1820     05BD  0BF4               	decfsz	??_init+1,f
  1821     05BE  2DBB               	goto	u587
  1822     05BF                     l1054:
  1823                           
  1824                           ;CLASS4_TASK2.c: 55:     lcd_cmd(0X01);
  1825     05BF  3001               	movlw	1
  1826     05C0  120A  118A  24AD  120A  118A  	fcall	_lcd_cmd
  1827     05C5                     l1056:
  1828                           
  1829                           ;CLASS4_TASK2.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1830     05C5  30C3               	movlw	195
  1831     05C6  00F4               	movwf	??_init+1
  1832     05C7  30CD               	movlw	205
  1833     05C8  00F3               	movwf	??_init
  1834     05C9                     u597:
  1835     05C9  0BF3               	decfsz	??_init,f
  1836     05CA  2DC9               	goto	u597
  1837     05CB  0BF4               	decfsz	??_init+1,f
  1838     05CC  2DC9               	goto	u597
  1839     05CD                     l1058:
  1840                           
  1841                           ;CLASS4_TASK2.c: 57:     j=175;
  1842     05CD  30AF               	movlw	175
  1843     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1844     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1845     05D0  00E7               	movwf	_j
  1846     05D1  3000               	movlw	0
  1847     05D2  00E8               	movwf	_j+1
  1848     05D3                     l59:
  1849     05D3  0008               	return
  1850     05D4                     __end_of_init:
  1851                           
  1852                           	psect	text9
  1853     04AD                     __ptext9:	
  1854 ;; *************** function _lcd_cmd *****************
  1855 ;; Defined at:
  1856 ;;		line 125 in file "CLASS4_TASK2.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  i               1    wreg     unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  i               1    2[COMMON] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1870 ;;      Params:         0       0       0       0       0
  1871 ;;      Locals:         1       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0
  1873 ;;      Totals:         3       0       0       0       0
  1874 ;;Total ram usage:        3 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_init
  1880 ;;		_keyscane
  1881 ;;		_lcd_output
  1882 ;;		_compare
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886     04AD                     _lcd_cmd:	
  1887                           ;psect for function _lcd_cmd
  1888                           
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
  1892                           ;lcd_cmd@i stored from wreg
  1893     04AD  00F2               	movwf	lcd_cmd@i
  1894     04AE                     l880:
  1895                           
  1896                           ;CLASS4_TASK2.c: 126:     PORTC&=~0X08;
  1897     04AE  30F7               	movlw	247
  1898     04AF  00F0               	movwf	??_lcd_cmd
  1899     04B0  0870               	movf	??_lcd_cmd,w
  1900     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1901     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1902     04B3  0587               	andwf	7,f	;volatile
  1903     04B4                     l882:
  1904                           
  1905                           ;CLASS4_TASK2.c: 127:     PORTD=i;
  1906     04B4  0872               	movf	lcd_cmd@i,w
  1907     04B5  0088               	movwf	8	;volatile
  1908     04B6                     l884:
  1909                           
  1910                           ;CLASS4_TASK2.c: 128:     PORTC|=0X01;
  1911     04B6  1407               	bsf	7,0	;volatile
  1912     04B7                     l886:
  1913                           
  1914                           ;CLASS4_TASK2.c: 129:     PORTC&=~0X01;
  1915     04B7  30FE               	movlw	254
  1916     04B8  00F0               	movwf	??_lcd_cmd
  1917     04B9  0870               	movf	??_lcd_cmd,w
  1918     04BA  0587               	andwf	7,f	;volatile
  1919                           
  1920                           ;CLASS4_TASK2.c: 130:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1921     04BB  30C3               	movlw	195
  1922     04BC  00F1               	movwf	??_lcd_cmd+1
  1923     04BD  30CD               	movlw	205
  1924     04BE  00F0               	movwf	??_lcd_cmd
  1925     04BF                     u607:
  1926     04BF  0BF0               	decfsz	??_lcd_cmd,f
  1927     04C0  2CBF               	goto	u607
  1928     04C1  0BF1               	decfsz	??_lcd_cmd+1,f
  1929     04C2  2CBF               	goto	u607
  1930     04C3                     l81:
  1931     04C3  0008               	return
  1932     04C4                     __end_of_lcd_cmd:
  1933     007E                     btemp	set	126	;btemp
  1934     007E                     wtemp0	set	126
  1935                           
  1936                           	psect	config
  1937                           
  1938                           ;Config register CONFIG @ 0x2007
  1939                           ;	Oscillator Selection bits
  1940                           ;	FOSC = EXTRC, RC oscillator
  1941                           ;	Watchdog Timer Enable bit
  1942                           ;	WDTE = OFF, WDT disabled
  1943                           ;	Power-up Timer Enable bit
  1944                           ;	PWRTE = OFF, PWRT disabled
  1945                           ;	Brown-out Reset Enable bit
  1946                           ;	BOREN = OFF, BOR disabled
  1947                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1948                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1949                           ;	Data EEPROM Memory Code Protection bit
  1950                           ;	CPD = OFF, Data EEPROM code protection off
  1951                           ;	Flash Program Memory Write Enable bits
  1952                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1953                           ;	In-Circuit Debugger Mode bit
  1954                           ;	DEBUG = 0x1, unprogrammed default
  1955                           ;	Flash Program Memory Code Protection bit
  1956                           ;	CP = OFF, Code protection off
  1957     2007                     	org	8199
  1958     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        61
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      80
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_output->___lwdiv
    ___lwdiv->___wmul
    _compare->_lcd_cmd
    _compare->_lcd_data
    _init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_keyscane
    _keyscane->_compare

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2169
                               _init
                           _keyscane
 ---------------------------------------------------------------------------------
 (1) _keyscane                                             1     1      0    2147
                                             37 BANK0      1     1      0
                            _compare
                            _lcd_cmd
                           _lcd_data
                         _lcd_output
 ---------------------------------------------------------------------------------
 (2) _lcd_output                                           5     3      2    1391
                                              0 BANK0      4     2      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _compare                                             43    41      2     712
                                              3 COMMON     6     4      2
                                              0 BANK0     37    37      0
                            _lcd_cmd
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcd_cmd
   _keyscane
     _compare
       _lcd_cmd
       _lcd_data
     _lcd_cmd
     _lcd_data
     _lcd_output
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _lcd_cmd
       _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1E       7       37.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7C      12        0.0%
ABS                  0      0      7C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 19 13:30:05 2024

                      _i 0065                        _j 0067                        _m 006B  
                      _n 006A                        _x 006C                        pc 0002  
         ___bmul@product 0072                       l72 06FA                       l81 04C3  
                     l59 05D3                       l75 065F                       l78 0497  
                     _d1 006D                       _d2 006E                       _d3 006F  
                     fsr 0004      ___wmul@multiplicand 0072                      l100 07D5  
                    l212 04AC                      l186 050D                      l188 0525  
                    l466 0569                      l900 0503                      l902 0507  
                    l920 04A4                      l912 0499                      l904 0514  
                    l922 04AB                      l914 049A                      l930 052E  
                    l906 051B                      l916 049E                      l940 0551  
                    l932 0531                      l908 0521                      l918 04A2  
                    l942 0557                      l934 0538                      l926 0526  
                    l880 04AE                      l944 0558                      l936 053C  
                    l928 0528                      l960 0635                      l952 05D4  
                    l882 04B4                      l890 0488                      l946 055F  
                    l938 0540                      l970 0656                      l962 063B  
                    l954 0626                      l884 04B6                      l892 048A  
                    l980 0728                      l972 06FB                      l948 0565  
                    l964 0644                      l956 0626                      l886 04B7  
                    l894 048B                      l990 0740                      l974 0701  
                    l966 064A                      l958 062C                      l896 048F  
                    l888 0485                      l976 070A                      l992 074E  
                    l968 0650                      l994 0757                      l986 072C  
                    l978 0713                      l898 0501                      l996 0760  
                    l988 0738                      l998 0775                      u300 0521  
                    u301 0520                      u310 049E                      u311 049D  
                    u400 070A                      u320 04AB                      u401 0709  
                    u321 04AA                      u410 0713                      u330 052E  
                    u411 0712                      u331 052D                      u420 071B  
                    u500 0685                      u501 0684                      u430 074D  
                    u350 0540                      u270 0507                      u510 06B1  
                    u431 074C                      u351 053F                      u271 0506  
                    u511 06B0                      u440 0757                      u520 06D6  
                    u441 0756                      u345 0532                      u521 06D5  
                    u450 0760                      u370 0551                      u451 075F  
                    u435 0749                      u371 0550                      u460 0768  
                    u365 0541                      u285 050E                      u470 079A  
                    u390 0565                      u607 04BF                      u471 0799  
                    u391 0564                      u375 054D                      u295 0515  
                    u480 07A3                      u537 0493                      u385 0559  
                    u490 07D5                      u547 0583                      u491 07D4  
                    u475 0796                      u557 0591                      u567 059F  
                    u495 07D1                      u577 05AD                      u587 05BB  
                    u597 05C9                      _arr 00A0                      fsr0 0004  
                    indf 0000                     l1010 079B                     l1020 07C0  
                   l1012 07B0                     l1004 0779                     l1100 06E1  
                   l1030 0570                     l1022 07C8                     l1006 0785  
                   l1102 06E5                     l1110 06EC                     l1040 058D  
                   l1032 0573                     l1024 056A                     l1008 078D  
                   l1112 0463                     l1050 05B1                     l1042 0595  
                   l1034 0579                     l1026 056D                     l1018 07B4  
                   l1114 0468                     l1052 05B7                     l1044 059B  
                   l1036 057F                     l1028 056F                     l1060 0660  
                   l1054 05BF                     l1046 05A3                     l1038 0587  
                   l1070 066F                     l1062 0666                     l1056 05C5  
                   l1048 05A9                     l1080 06A2                     l1072 0679  
                   l1064 066C                     l1058 05CD                     l1090 06C7  
                   l1082 06B1                     l1074 067F                     l1092 06D6  
                   l1084 06B5                     l1076 0685                     l1094 06DA  
                   l1086 06BB                     l1078 0696              compare@l_94 0041  
            compare@l_97 0043              compare@z_93 0020              compare@z_96 002C  
                   _main 0463                     _init 056A                     btemp 007E  
            lcd_output@i 0020                     start 0000        ___bmul@multiplier 0073  
           compare@F1041 0046             compare@F1044 0052             compare@F1038 005C  
                  ?_main 0070                    ?_init 0070          __end_of___lwdiv 056A  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_lcd_cmd 04C4          __end_of_compare 07D6                    _value 0069  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07D6             __end_of_main 0471             __end_of_init 05D4  
                 ??_main 007E                   ??_init 0073         __end_of_lcd_data 0498  
                 ___bmul 0498                   ___wmul 0501                ??___lwdiv 007A  
       __end_of_keyscane 06FB                ??_lcd_cmd 0070                ??_compare 0075  
__end_of__initialization 07FC      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 04E2             __pidataBANK1 04C4               __pbssBANK0 0065  
             __pmaintext 0463                  ?___bmul 0070                  ?___wmul 0070  
             _lcd_output 05D4                ?_lcd_data 0070                ?_keyscane 0070  
                ___lwdiv 0526                  __ptext1 0660                  __ptext2 05D4  
                __ptext3 0501                  __ptext4 0526                  __ptext5 0498  
                __ptext6 06FB                  __ptext7 0484                  __ptext8 056A  
                __ptext9 04AD                  _lcd_cmd 04AD                  _compare 06FB  
             ??_lcd_data 0070     end_of_initialization 07FC               ??_keyscane 0045  
            ?_lcd_output 0020           __end_of___bmul 04AD           __end_of___wmul 0526  
    start_initialization 07D6                 ??___bmul 0071                 ??___wmul 0074  
             init_fetch0 0471              __pdataBANK0 0046              __pdataBANK1 00A0  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?_lcd_cmd 0070                 ?_compare 0073  
       ___lwdiv@quotient 007B           ___wmul@product 0074                lcd_data@i 0072  
      ___wmul@multiplier 0070             ??_lcd_output 0022       __end_of_lcd_output 0660  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 _lcd_data 0484  
               _keyscane 0660                 lcd_cmd@i 0072                 compare@i 0073  
               compare@l 003F                 compare@z 0036                 init_ram0 0475  
             _OPTION_REG 0081  
